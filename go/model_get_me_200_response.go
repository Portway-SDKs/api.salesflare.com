/*
Salesflare API

# Introduction  ## Getting Started  The Salesflare API allows you to access and build your own applications or integrations that interact with Salesflare.  The Salesflare API provides a RESTful interface with JSON-formatted responses to access most Salesflare resources.  ## Authentication  The Salesflare API uses bearer token based authentication, which means you need to use the key-value pair \"Authorization : Bearer APIKEY\" in the header to authenticate.  You can make an API key in [\"Settings\" > \"API keys\"](https://app.salesflare.com/#/settings/apikeys).  Click on the large orange \"+\" button on the bottom right of the screen to create an API key.  ![Screenshot API Key Settings](https://lib.salesflare.com/api_docs/screenshot_settings_apikeys.png)  ## Requests  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure your developer tools support this version of TLS as older versions or SSL are not supported for security reasons.  For PUT or POST requests (e.g. create, update), the payload must be provided as JSON in the request body.  ## Responses  Responses use HTTP status codes, with the most typical ones being:  | Code                   | Meaning               | |------------------------|-----------------------| | Successful Responses                           | | 200                    | OK                    | | Error Responses                                | | 400                    | Bad Request           | | 401                    | Unauthorized          | | 404                    | Not Found             | | 429                    | Too Many Requests     | | 500                    | Internal Server Error |  ## Testing  We recommend testing our API with Postman.  ### Download specification  Our API is documented following the OpenAPI specification. You can download it [here](https://api.salesflare.com/openapi.json)  ### Import in Postman  To import the collection, open Postman and click Import, then select \"Import From Link\"  Copy & Paste the following link and press the \"Import\" button:  > https://api.salesflare.com/openapi.json  ![Screenshot Postman Import](https://lib.salesflare.com/api_docs/screenshot_postman_import.png)  ## Support  For API questions and support, please email support@salesflare.com or click the chat bubble below.

API version: 1.0.0
Contact: support@salesflare.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package salesflare

import (
	"encoding/json"
	"time"
)

// checks if the GetMe200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMe200Response{}

// GetMe200Response struct for GetMe200Response
type GetMe200Response struct {
	Id *float32 `json:"id,omitempty"`
	Team *GetMe200ResponseTeam `json:"team,omitempty"`
	Group *float32 `json:"group,omitempty"`
	AmountOfTrialDaysEarned *float32 `json:"amount_of_trial_days_earned,omitempty"`
	HasReceivedAccountSuggestions *bool `json:"has_received_account_suggestions,omitempty"`
	HasArchivedContacts *bool `json:"has_archived_contacts,omitempty"`
	NotificationChannelId *string `json:"notification_channel_id,omitempty"`
	NeedsPassword *bool `json:"needs_password,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	CreationDate *time.Time `json:"creation_date,omitempty"`
	ModificationDate *time.Time `json:"modification_date,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
	Firstname *string `json:"firstname,omitempty"`
	Middle *string `json:"middle,omitempty"`
	Lastname *string `json:"lastname,omitempty"`
	Suffix *string `json:"suffix,omitempty"`
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Picture *string `json:"picture,omitempty"`
	Type *string `json:"type,omitempty"`
	IsAdmin *bool `json:"is_admin,omitempty"`
	CreditUsage *float32 `json:"credit_usage,omitempty"`
	IsImporting *bool `json:"is_importing,omitempty"`
	SyncStatus *string `json:"sync_status,omitempty"`
	CalendarSyncStatus *string `json:"calendar_sync_status,omitempty"`
	FirstCalendarSyncDone *bool `json:"first_calendar_sync_done,omitempty"`
	TrialExpired *bool `json:"trial_expired,omitempty"`
	TrialExpiryDate *time.Time `json:"trial_expiry_date,omitempty"`
	TrialExtended *bool `json:"trial_extended,omitempty"`
	Restricted *bool `json:"restricted,omitempty"`
	RestrictedReason *string `json:"restricted_reason,omitempty"`
	TeamDiscountCode *string `json:"team_discount_code,omitempty"`
	ReferralCode *string `json:"referral_code,omitempty"`
	ReferralReward *float32 `json:"referral_reward,omitempty"`
	IsDelinquent *bool `json:"is_delinquent,omitempty"`
	SocialProfiles []GetMe200ResponseSocialProfilesInner `json:"social_profiles,omitempty"`
	PhoneNumbers []GetMe200ResponsePhoneNumbersInner `json:"phone_numbers,omitempty"`
	Positions []GetContacts200ResponseInnerPositionsInner `json:"positions,omitempty"`
	Addresses []map[string]interface{} `json:"addresses,omitempty"`
	Tags []map[string]interface{} `json:"tags,omitempty"`
	IntercomHash *string `json:"intercom_hash,omitempty"`
	FirstDayOfWeek *float32 `json:"first_day_of_week,omitempty"`
	AmPmNotation *bool `json:"am_pm_notation,omitempty"`
	AutoFindEmailLinkedin *bool `json:"auto_find_email_linkedin,omitempty"`
	DataSourcesToReconnect []GetMe200ResponseDataSourcesToReconnectInner `json:"data_sources_to_reconnect,omitempty"`
	DataSources []GetMe200ResponseDataSourcesInner `json:"data_sources,omitempty"`
	PlanFlags map[string]interface{} `json:"plan_flags,omitempty"`
	Flags []GetMe200ResponseFlagsInner `json:"flags,omitempty"`
	Role *GetMe200ResponseRole `json:"role,omitempty"`
	CallLogSyncDate *time.Time `json:"call_log_sync_date,omitempty"`
	TwoFaEnabled *bool `json:"two_fa_enabled,omitempty"`
}

// NewGetMe200Response instantiates a new GetMe200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMe200Response() *GetMe200Response {
	this := GetMe200Response{}
	return &this
}

// NewGetMe200ResponseWithDefaults instantiates a new GetMe200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMe200ResponseWithDefaults() *GetMe200Response {
	this := GetMe200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetMe200Response) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetMe200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *GetMe200Response) SetId(v float32) {
	o.Id = &v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *GetMe200Response) GetTeam() GetMe200ResponseTeam {
	if o == nil || IsNil(o.Team) {
		var ret GetMe200ResponseTeam
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTeamOk() (*GetMe200ResponseTeam, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *GetMe200Response) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given GetMe200ResponseTeam and assigns it to the Team field.
func (o *GetMe200Response) SetTeam(v GetMe200ResponseTeam) {
	o.Team = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *GetMe200Response) GetGroup() float32 {
	if o == nil || IsNil(o.Group) {
		var ret float32
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetGroupOk() (*float32, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *GetMe200Response) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given float32 and assigns it to the Group field.
func (o *GetMe200Response) SetGroup(v float32) {
	o.Group = &v
}

// GetAmountOfTrialDaysEarned returns the AmountOfTrialDaysEarned field value if set, zero value otherwise.
func (o *GetMe200Response) GetAmountOfTrialDaysEarned() float32 {
	if o == nil || IsNil(o.AmountOfTrialDaysEarned) {
		var ret float32
		return ret
	}
	return *o.AmountOfTrialDaysEarned
}

// GetAmountOfTrialDaysEarnedOk returns a tuple with the AmountOfTrialDaysEarned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetAmountOfTrialDaysEarnedOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountOfTrialDaysEarned) {
		return nil, false
	}
	return o.AmountOfTrialDaysEarned, true
}

// HasAmountOfTrialDaysEarned returns a boolean if a field has been set.
func (o *GetMe200Response) HasAmountOfTrialDaysEarned() bool {
	if o != nil && !IsNil(o.AmountOfTrialDaysEarned) {
		return true
	}

	return false
}

// SetAmountOfTrialDaysEarned gets a reference to the given float32 and assigns it to the AmountOfTrialDaysEarned field.
func (o *GetMe200Response) SetAmountOfTrialDaysEarned(v float32) {
	o.AmountOfTrialDaysEarned = &v
}

// GetHasReceivedAccountSuggestions returns the HasReceivedAccountSuggestions field value if set, zero value otherwise.
func (o *GetMe200Response) GetHasReceivedAccountSuggestions() bool {
	if o == nil || IsNil(o.HasReceivedAccountSuggestions) {
		var ret bool
		return ret
	}
	return *o.HasReceivedAccountSuggestions
}

// GetHasReceivedAccountSuggestionsOk returns a tuple with the HasReceivedAccountSuggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetHasReceivedAccountSuggestionsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasReceivedAccountSuggestions) {
		return nil, false
	}
	return o.HasReceivedAccountSuggestions, true
}

// HasHasReceivedAccountSuggestions returns a boolean if a field has been set.
func (o *GetMe200Response) HasHasReceivedAccountSuggestions() bool {
	if o != nil && !IsNil(o.HasReceivedAccountSuggestions) {
		return true
	}

	return false
}

// SetHasReceivedAccountSuggestions gets a reference to the given bool and assigns it to the HasReceivedAccountSuggestions field.
func (o *GetMe200Response) SetHasReceivedAccountSuggestions(v bool) {
	o.HasReceivedAccountSuggestions = &v
}

// GetHasArchivedContacts returns the HasArchivedContacts field value if set, zero value otherwise.
func (o *GetMe200Response) GetHasArchivedContacts() bool {
	if o == nil || IsNil(o.HasArchivedContacts) {
		var ret bool
		return ret
	}
	return *o.HasArchivedContacts
}

// GetHasArchivedContactsOk returns a tuple with the HasArchivedContacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetHasArchivedContactsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasArchivedContacts) {
		return nil, false
	}
	return o.HasArchivedContacts, true
}

// HasHasArchivedContacts returns a boolean if a field has been set.
func (o *GetMe200Response) HasHasArchivedContacts() bool {
	if o != nil && !IsNil(o.HasArchivedContacts) {
		return true
	}

	return false
}

// SetHasArchivedContacts gets a reference to the given bool and assigns it to the HasArchivedContacts field.
func (o *GetMe200Response) SetHasArchivedContacts(v bool) {
	o.HasArchivedContacts = &v
}

// GetNotificationChannelId returns the NotificationChannelId field value if set, zero value otherwise.
func (o *GetMe200Response) GetNotificationChannelId() string {
	if o == nil || IsNil(o.NotificationChannelId) {
		var ret string
		return ret
	}
	return *o.NotificationChannelId
}

// GetNotificationChannelIdOk returns a tuple with the NotificationChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetNotificationChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationChannelId) {
		return nil, false
	}
	return o.NotificationChannelId, true
}

// HasNotificationChannelId returns a boolean if a field has been set.
func (o *GetMe200Response) HasNotificationChannelId() bool {
	if o != nil && !IsNil(o.NotificationChannelId) {
		return true
	}

	return false
}

// SetNotificationChannelId gets a reference to the given string and assigns it to the NotificationChannelId field.
func (o *GetMe200Response) SetNotificationChannelId(v string) {
	o.NotificationChannelId = &v
}

// GetNeedsPassword returns the NeedsPassword field value if set, zero value otherwise.
func (o *GetMe200Response) GetNeedsPassword() bool {
	if o == nil || IsNil(o.NeedsPassword) {
		var ret bool
		return ret
	}
	return *o.NeedsPassword
}

// GetNeedsPasswordOk returns a tuple with the NeedsPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetNeedsPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.NeedsPassword) {
		return nil, false
	}
	return o.NeedsPassword, true
}

// HasNeedsPassword returns a boolean if a field has been set.
func (o *GetMe200Response) HasNeedsPassword() bool {
	if o != nil && !IsNil(o.NeedsPassword) {
		return true
	}

	return false
}

// SetNeedsPassword gets a reference to the given bool and assigns it to the NeedsPassword field.
func (o *GetMe200Response) SetNeedsPassword(v bool) {
	o.NeedsPassword = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *GetMe200Response) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *GetMe200Response) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *GetMe200Response) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *GetMe200Response) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *GetMe200Response) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *GetMe200Response) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetModificationDate returns the ModificationDate field value if set, zero value otherwise.
func (o *GetMe200Response) GetModificationDate() time.Time {
	if o == nil || IsNil(o.ModificationDate) {
		var ret time.Time
		return ret
	}
	return *o.ModificationDate
}

// GetModificationDateOk returns a tuple with the ModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetModificationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModificationDate) {
		return nil, false
	}
	return o.ModificationDate, true
}

// HasModificationDate returns a boolean if a field has been set.
func (o *GetMe200Response) HasModificationDate() bool {
	if o != nil && !IsNil(o.ModificationDate) {
		return true
	}

	return false
}

// SetModificationDate gets a reference to the given time.Time and assigns it to the ModificationDate field.
func (o *GetMe200Response) SetModificationDate(v time.Time) {
	o.ModificationDate = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *GetMe200Response) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *GetMe200Response) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *GetMe200Response) SetPrefix(v string) {
	o.Prefix = &v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *GetMe200Response) GetFirstname() string {
	if o == nil || IsNil(o.Firstname) {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.Firstname) {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *GetMe200Response) HasFirstname() bool {
	if o != nil && !IsNil(o.Firstname) {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *GetMe200Response) SetFirstname(v string) {
	o.Firstname = &v
}

// GetMiddle returns the Middle field value if set, zero value otherwise.
func (o *GetMe200Response) GetMiddle() string {
	if o == nil || IsNil(o.Middle) {
		var ret string
		return ret
	}
	return *o.Middle
}

// GetMiddleOk returns a tuple with the Middle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetMiddleOk() (*string, bool) {
	if o == nil || IsNil(o.Middle) {
		return nil, false
	}
	return o.Middle, true
}

// HasMiddle returns a boolean if a field has been set.
func (o *GetMe200Response) HasMiddle() bool {
	if o != nil && !IsNil(o.Middle) {
		return true
	}

	return false
}

// SetMiddle gets a reference to the given string and assigns it to the Middle field.
func (o *GetMe200Response) SetMiddle(v string) {
	o.Middle = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *GetMe200Response) GetLastname() string {
	if o == nil || IsNil(o.Lastname) {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetLastnameOk() (*string, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *GetMe200Response) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *GetMe200Response) SetLastname(v string) {
	o.Lastname = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *GetMe200Response) GetSuffix() string {
	if o == nil || IsNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Suffix) {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *GetMe200Response) HasSuffix() bool {
	if o != nil && !IsNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *GetMe200Response) SetSuffix(v string) {
	o.Suffix = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetMe200Response) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetMe200Response) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetMe200Response) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetMe200Response) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetMe200Response) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetMe200Response) SetEmail(v string) {
	o.Email = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *GetMe200Response) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *GetMe200Response) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *GetMe200Response) SetDomain(v string) {
	o.Domain = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *GetMe200Response) GetPicture() string {
	if o == nil || IsNil(o.Picture) {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetPictureOk() (*string, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *GetMe200Response) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *GetMe200Response) SetPicture(v string) {
	o.Picture = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetMe200Response) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetMe200Response) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetMe200Response) SetType(v string) {
	o.Type = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *GetMe200Response) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *GetMe200Response) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *GetMe200Response) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetCreditUsage returns the CreditUsage field value if set, zero value otherwise.
func (o *GetMe200Response) GetCreditUsage() float32 {
	if o == nil || IsNil(o.CreditUsage) {
		var ret float32
		return ret
	}
	return *o.CreditUsage
}

// GetCreditUsageOk returns a tuple with the CreditUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetCreditUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditUsage) {
		return nil, false
	}
	return o.CreditUsage, true
}

// HasCreditUsage returns a boolean if a field has been set.
func (o *GetMe200Response) HasCreditUsage() bool {
	if o != nil && !IsNil(o.CreditUsage) {
		return true
	}

	return false
}

// SetCreditUsage gets a reference to the given float32 and assigns it to the CreditUsage field.
func (o *GetMe200Response) SetCreditUsage(v float32) {
	o.CreditUsage = &v
}

// GetIsImporting returns the IsImporting field value if set, zero value otherwise.
func (o *GetMe200Response) GetIsImporting() bool {
	if o == nil || IsNil(o.IsImporting) {
		var ret bool
		return ret
	}
	return *o.IsImporting
}

// GetIsImportingOk returns a tuple with the IsImporting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetIsImportingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsImporting) {
		return nil, false
	}
	return o.IsImporting, true
}

// HasIsImporting returns a boolean if a field has been set.
func (o *GetMe200Response) HasIsImporting() bool {
	if o != nil && !IsNil(o.IsImporting) {
		return true
	}

	return false
}

// SetIsImporting gets a reference to the given bool and assigns it to the IsImporting field.
func (o *GetMe200Response) SetIsImporting(v bool) {
	o.IsImporting = &v
}

// GetSyncStatus returns the SyncStatus field value if set, zero value otherwise.
func (o *GetMe200Response) GetSyncStatus() string {
	if o == nil || IsNil(o.SyncStatus) {
		var ret string
		return ret
	}
	return *o.SyncStatus
}

// GetSyncStatusOk returns a tuple with the SyncStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetSyncStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SyncStatus) {
		return nil, false
	}
	return o.SyncStatus, true
}

// HasSyncStatus returns a boolean if a field has been set.
func (o *GetMe200Response) HasSyncStatus() bool {
	if o != nil && !IsNil(o.SyncStatus) {
		return true
	}

	return false
}

// SetSyncStatus gets a reference to the given string and assigns it to the SyncStatus field.
func (o *GetMe200Response) SetSyncStatus(v string) {
	o.SyncStatus = &v
}

// GetCalendarSyncStatus returns the CalendarSyncStatus field value if set, zero value otherwise.
func (o *GetMe200Response) GetCalendarSyncStatus() string {
	if o == nil || IsNil(o.CalendarSyncStatus) {
		var ret string
		return ret
	}
	return *o.CalendarSyncStatus
}

// GetCalendarSyncStatusOk returns a tuple with the CalendarSyncStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetCalendarSyncStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CalendarSyncStatus) {
		return nil, false
	}
	return o.CalendarSyncStatus, true
}

// HasCalendarSyncStatus returns a boolean if a field has been set.
func (o *GetMe200Response) HasCalendarSyncStatus() bool {
	if o != nil && !IsNil(o.CalendarSyncStatus) {
		return true
	}

	return false
}

// SetCalendarSyncStatus gets a reference to the given string and assigns it to the CalendarSyncStatus field.
func (o *GetMe200Response) SetCalendarSyncStatus(v string) {
	o.CalendarSyncStatus = &v
}

// GetFirstCalendarSyncDone returns the FirstCalendarSyncDone field value if set, zero value otherwise.
func (o *GetMe200Response) GetFirstCalendarSyncDone() bool {
	if o == nil || IsNil(o.FirstCalendarSyncDone) {
		var ret bool
		return ret
	}
	return *o.FirstCalendarSyncDone
}

// GetFirstCalendarSyncDoneOk returns a tuple with the FirstCalendarSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetFirstCalendarSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.FirstCalendarSyncDone) {
		return nil, false
	}
	return o.FirstCalendarSyncDone, true
}

// HasFirstCalendarSyncDone returns a boolean if a field has been set.
func (o *GetMe200Response) HasFirstCalendarSyncDone() bool {
	if o != nil && !IsNil(o.FirstCalendarSyncDone) {
		return true
	}

	return false
}

// SetFirstCalendarSyncDone gets a reference to the given bool and assigns it to the FirstCalendarSyncDone field.
func (o *GetMe200Response) SetFirstCalendarSyncDone(v bool) {
	o.FirstCalendarSyncDone = &v
}

// GetTrialExpired returns the TrialExpired field value if set, zero value otherwise.
func (o *GetMe200Response) GetTrialExpired() bool {
	if o == nil || IsNil(o.TrialExpired) {
		var ret bool
		return ret
	}
	return *o.TrialExpired
}

// GetTrialExpiredOk returns a tuple with the TrialExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTrialExpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.TrialExpired) {
		return nil, false
	}
	return o.TrialExpired, true
}

// HasTrialExpired returns a boolean if a field has been set.
func (o *GetMe200Response) HasTrialExpired() bool {
	if o != nil && !IsNil(o.TrialExpired) {
		return true
	}

	return false
}

// SetTrialExpired gets a reference to the given bool and assigns it to the TrialExpired field.
func (o *GetMe200Response) SetTrialExpired(v bool) {
	o.TrialExpired = &v
}

// GetTrialExpiryDate returns the TrialExpiryDate field value if set, zero value otherwise.
func (o *GetMe200Response) GetTrialExpiryDate() time.Time {
	if o == nil || IsNil(o.TrialExpiryDate) {
		var ret time.Time
		return ret
	}
	return *o.TrialExpiryDate
}

// GetTrialExpiryDateOk returns a tuple with the TrialExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTrialExpiryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TrialExpiryDate) {
		return nil, false
	}
	return o.TrialExpiryDate, true
}

// HasTrialExpiryDate returns a boolean if a field has been set.
func (o *GetMe200Response) HasTrialExpiryDate() bool {
	if o != nil && !IsNil(o.TrialExpiryDate) {
		return true
	}

	return false
}

// SetTrialExpiryDate gets a reference to the given time.Time and assigns it to the TrialExpiryDate field.
func (o *GetMe200Response) SetTrialExpiryDate(v time.Time) {
	o.TrialExpiryDate = &v
}

// GetTrialExtended returns the TrialExtended field value if set, zero value otherwise.
func (o *GetMe200Response) GetTrialExtended() bool {
	if o == nil || IsNil(o.TrialExtended) {
		var ret bool
		return ret
	}
	return *o.TrialExtended
}

// GetTrialExtendedOk returns a tuple with the TrialExtended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTrialExtendedOk() (*bool, bool) {
	if o == nil || IsNil(o.TrialExtended) {
		return nil, false
	}
	return o.TrialExtended, true
}

// HasTrialExtended returns a boolean if a field has been set.
func (o *GetMe200Response) HasTrialExtended() bool {
	if o != nil && !IsNil(o.TrialExtended) {
		return true
	}

	return false
}

// SetTrialExtended gets a reference to the given bool and assigns it to the TrialExtended field.
func (o *GetMe200Response) SetTrialExtended(v bool) {
	o.TrialExtended = &v
}

// GetRestricted returns the Restricted field value if set, zero value otherwise.
func (o *GetMe200Response) GetRestricted() bool {
	if o == nil || IsNil(o.Restricted) {
		var ret bool
		return ret
	}
	return *o.Restricted
}

// GetRestrictedOk returns a tuple with the Restricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetRestrictedOk() (*bool, bool) {
	if o == nil || IsNil(o.Restricted) {
		return nil, false
	}
	return o.Restricted, true
}

// HasRestricted returns a boolean if a field has been set.
func (o *GetMe200Response) HasRestricted() bool {
	if o != nil && !IsNil(o.Restricted) {
		return true
	}

	return false
}

// SetRestricted gets a reference to the given bool and assigns it to the Restricted field.
func (o *GetMe200Response) SetRestricted(v bool) {
	o.Restricted = &v
}

// GetRestrictedReason returns the RestrictedReason field value if set, zero value otherwise.
func (o *GetMe200Response) GetRestrictedReason() string {
	if o == nil || IsNil(o.RestrictedReason) {
		var ret string
		return ret
	}
	return *o.RestrictedReason
}

// GetRestrictedReasonOk returns a tuple with the RestrictedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetRestrictedReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RestrictedReason) {
		return nil, false
	}
	return o.RestrictedReason, true
}

// HasRestrictedReason returns a boolean if a field has been set.
func (o *GetMe200Response) HasRestrictedReason() bool {
	if o != nil && !IsNil(o.RestrictedReason) {
		return true
	}

	return false
}

// SetRestrictedReason gets a reference to the given string and assigns it to the RestrictedReason field.
func (o *GetMe200Response) SetRestrictedReason(v string) {
	o.RestrictedReason = &v
}

// GetTeamDiscountCode returns the TeamDiscountCode field value if set, zero value otherwise.
func (o *GetMe200Response) GetTeamDiscountCode() string {
	if o == nil || IsNil(o.TeamDiscountCode) {
		var ret string
		return ret
	}
	return *o.TeamDiscountCode
}

// GetTeamDiscountCodeOk returns a tuple with the TeamDiscountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTeamDiscountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TeamDiscountCode) {
		return nil, false
	}
	return o.TeamDiscountCode, true
}

// HasTeamDiscountCode returns a boolean if a field has been set.
func (o *GetMe200Response) HasTeamDiscountCode() bool {
	if o != nil && !IsNil(o.TeamDiscountCode) {
		return true
	}

	return false
}

// SetTeamDiscountCode gets a reference to the given string and assigns it to the TeamDiscountCode field.
func (o *GetMe200Response) SetTeamDiscountCode(v string) {
	o.TeamDiscountCode = &v
}

// GetReferralCode returns the ReferralCode field value if set, zero value otherwise.
func (o *GetMe200Response) GetReferralCode() string {
	if o == nil || IsNil(o.ReferralCode) {
		var ret string
		return ret
	}
	return *o.ReferralCode
}

// GetReferralCodeOk returns a tuple with the ReferralCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetReferralCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferralCode) {
		return nil, false
	}
	return o.ReferralCode, true
}

// HasReferralCode returns a boolean if a field has been set.
func (o *GetMe200Response) HasReferralCode() bool {
	if o != nil && !IsNil(o.ReferralCode) {
		return true
	}

	return false
}

// SetReferralCode gets a reference to the given string and assigns it to the ReferralCode field.
func (o *GetMe200Response) SetReferralCode(v string) {
	o.ReferralCode = &v
}

// GetReferralReward returns the ReferralReward field value if set, zero value otherwise.
func (o *GetMe200Response) GetReferralReward() float32 {
	if o == nil || IsNil(o.ReferralReward) {
		var ret float32
		return ret
	}
	return *o.ReferralReward
}

// GetReferralRewardOk returns a tuple with the ReferralReward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetReferralRewardOk() (*float32, bool) {
	if o == nil || IsNil(o.ReferralReward) {
		return nil, false
	}
	return o.ReferralReward, true
}

// HasReferralReward returns a boolean if a field has been set.
func (o *GetMe200Response) HasReferralReward() bool {
	if o != nil && !IsNil(o.ReferralReward) {
		return true
	}

	return false
}

// SetReferralReward gets a reference to the given float32 and assigns it to the ReferralReward field.
func (o *GetMe200Response) SetReferralReward(v float32) {
	o.ReferralReward = &v
}

// GetIsDelinquent returns the IsDelinquent field value if set, zero value otherwise.
func (o *GetMe200Response) GetIsDelinquent() bool {
	if o == nil || IsNil(o.IsDelinquent) {
		var ret bool
		return ret
	}
	return *o.IsDelinquent
}

// GetIsDelinquentOk returns a tuple with the IsDelinquent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetIsDelinquentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDelinquent) {
		return nil, false
	}
	return o.IsDelinquent, true
}

// HasIsDelinquent returns a boolean if a field has been set.
func (o *GetMe200Response) HasIsDelinquent() bool {
	if o != nil && !IsNil(o.IsDelinquent) {
		return true
	}

	return false
}

// SetIsDelinquent gets a reference to the given bool and assigns it to the IsDelinquent field.
func (o *GetMe200Response) SetIsDelinquent(v bool) {
	o.IsDelinquent = &v
}

// GetSocialProfiles returns the SocialProfiles field value if set, zero value otherwise.
func (o *GetMe200Response) GetSocialProfiles() []GetMe200ResponseSocialProfilesInner {
	if o == nil || IsNil(o.SocialProfiles) {
		var ret []GetMe200ResponseSocialProfilesInner
		return ret
	}
	return o.SocialProfiles
}

// GetSocialProfilesOk returns a tuple with the SocialProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetSocialProfilesOk() ([]GetMe200ResponseSocialProfilesInner, bool) {
	if o == nil || IsNil(o.SocialProfiles) {
		return nil, false
	}
	return o.SocialProfiles, true
}

// HasSocialProfiles returns a boolean if a field has been set.
func (o *GetMe200Response) HasSocialProfiles() bool {
	if o != nil && !IsNil(o.SocialProfiles) {
		return true
	}

	return false
}

// SetSocialProfiles gets a reference to the given []GetMe200ResponseSocialProfilesInner and assigns it to the SocialProfiles field.
func (o *GetMe200Response) SetSocialProfiles(v []GetMe200ResponseSocialProfilesInner) {
	o.SocialProfiles = v
}

// GetPhoneNumbers returns the PhoneNumbers field value if set, zero value otherwise.
func (o *GetMe200Response) GetPhoneNumbers() []GetMe200ResponsePhoneNumbersInner {
	if o == nil || IsNil(o.PhoneNumbers) {
		var ret []GetMe200ResponsePhoneNumbersInner
		return ret
	}
	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetPhoneNumbersOk() ([]GetMe200ResponsePhoneNumbersInner, bool) {
	if o == nil || IsNil(o.PhoneNumbers) {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// HasPhoneNumbers returns a boolean if a field has been set.
func (o *GetMe200Response) HasPhoneNumbers() bool {
	if o != nil && !IsNil(o.PhoneNumbers) {
		return true
	}

	return false
}

// SetPhoneNumbers gets a reference to the given []GetMe200ResponsePhoneNumbersInner and assigns it to the PhoneNumbers field.
func (o *GetMe200Response) SetPhoneNumbers(v []GetMe200ResponsePhoneNumbersInner) {
	o.PhoneNumbers = v
}

// GetPositions returns the Positions field value if set, zero value otherwise.
func (o *GetMe200Response) GetPositions() []GetContacts200ResponseInnerPositionsInner {
	if o == nil || IsNil(o.Positions) {
		var ret []GetContacts200ResponseInnerPositionsInner
		return ret
	}
	return o.Positions
}

// GetPositionsOk returns a tuple with the Positions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetPositionsOk() ([]GetContacts200ResponseInnerPositionsInner, bool) {
	if o == nil || IsNil(o.Positions) {
		return nil, false
	}
	return o.Positions, true
}

// HasPositions returns a boolean if a field has been set.
func (o *GetMe200Response) HasPositions() bool {
	if o != nil && !IsNil(o.Positions) {
		return true
	}

	return false
}

// SetPositions gets a reference to the given []GetContacts200ResponseInnerPositionsInner and assigns it to the Positions field.
func (o *GetMe200Response) SetPositions(v []GetContacts200ResponseInnerPositionsInner) {
	o.Positions = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *GetMe200Response) GetAddresses() []map[string]interface{} {
	if o == nil || IsNil(o.Addresses) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetAddressesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *GetMe200Response) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []map[string]interface{} and assigns it to the Addresses field.
func (o *GetMe200Response) SetAddresses(v []map[string]interface{}) {
	o.Addresses = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GetMe200Response) GetTags() []map[string]interface{} {
	if o == nil || IsNil(o.Tags) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTagsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetMe200Response) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]interface{} and assigns it to the Tags field.
func (o *GetMe200Response) SetTags(v []map[string]interface{}) {
	o.Tags = v
}

// GetIntercomHash returns the IntercomHash field value if set, zero value otherwise.
func (o *GetMe200Response) GetIntercomHash() string {
	if o == nil || IsNil(o.IntercomHash) {
		var ret string
		return ret
	}
	return *o.IntercomHash
}

// GetIntercomHashOk returns a tuple with the IntercomHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetIntercomHashOk() (*string, bool) {
	if o == nil || IsNil(o.IntercomHash) {
		return nil, false
	}
	return o.IntercomHash, true
}

// HasIntercomHash returns a boolean if a field has been set.
func (o *GetMe200Response) HasIntercomHash() bool {
	if o != nil && !IsNil(o.IntercomHash) {
		return true
	}

	return false
}

// SetIntercomHash gets a reference to the given string and assigns it to the IntercomHash field.
func (o *GetMe200Response) SetIntercomHash(v string) {
	o.IntercomHash = &v
}

// GetFirstDayOfWeek returns the FirstDayOfWeek field value if set, zero value otherwise.
func (o *GetMe200Response) GetFirstDayOfWeek() float32 {
	if o == nil || IsNil(o.FirstDayOfWeek) {
		var ret float32
		return ret
	}
	return *o.FirstDayOfWeek
}

// GetFirstDayOfWeekOk returns a tuple with the FirstDayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetFirstDayOfWeekOk() (*float32, bool) {
	if o == nil || IsNil(o.FirstDayOfWeek) {
		return nil, false
	}
	return o.FirstDayOfWeek, true
}

// HasFirstDayOfWeek returns a boolean if a field has been set.
func (o *GetMe200Response) HasFirstDayOfWeek() bool {
	if o != nil && !IsNil(o.FirstDayOfWeek) {
		return true
	}

	return false
}

// SetFirstDayOfWeek gets a reference to the given float32 and assigns it to the FirstDayOfWeek field.
func (o *GetMe200Response) SetFirstDayOfWeek(v float32) {
	o.FirstDayOfWeek = &v
}

// GetAmPmNotation returns the AmPmNotation field value if set, zero value otherwise.
func (o *GetMe200Response) GetAmPmNotation() bool {
	if o == nil || IsNil(o.AmPmNotation) {
		var ret bool
		return ret
	}
	return *o.AmPmNotation
}

// GetAmPmNotationOk returns a tuple with the AmPmNotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetAmPmNotationOk() (*bool, bool) {
	if o == nil || IsNil(o.AmPmNotation) {
		return nil, false
	}
	return o.AmPmNotation, true
}

// HasAmPmNotation returns a boolean if a field has been set.
func (o *GetMe200Response) HasAmPmNotation() bool {
	if o != nil && !IsNil(o.AmPmNotation) {
		return true
	}

	return false
}

// SetAmPmNotation gets a reference to the given bool and assigns it to the AmPmNotation field.
func (o *GetMe200Response) SetAmPmNotation(v bool) {
	o.AmPmNotation = &v
}

// GetAutoFindEmailLinkedin returns the AutoFindEmailLinkedin field value if set, zero value otherwise.
func (o *GetMe200Response) GetAutoFindEmailLinkedin() bool {
	if o == nil || IsNil(o.AutoFindEmailLinkedin) {
		var ret bool
		return ret
	}
	return *o.AutoFindEmailLinkedin
}

// GetAutoFindEmailLinkedinOk returns a tuple with the AutoFindEmailLinkedin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetAutoFindEmailLinkedinOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoFindEmailLinkedin) {
		return nil, false
	}
	return o.AutoFindEmailLinkedin, true
}

// HasAutoFindEmailLinkedin returns a boolean if a field has been set.
func (o *GetMe200Response) HasAutoFindEmailLinkedin() bool {
	if o != nil && !IsNil(o.AutoFindEmailLinkedin) {
		return true
	}

	return false
}

// SetAutoFindEmailLinkedin gets a reference to the given bool and assigns it to the AutoFindEmailLinkedin field.
func (o *GetMe200Response) SetAutoFindEmailLinkedin(v bool) {
	o.AutoFindEmailLinkedin = &v
}

// GetDataSourcesToReconnect returns the DataSourcesToReconnect field value if set, zero value otherwise.
func (o *GetMe200Response) GetDataSourcesToReconnect() []GetMe200ResponseDataSourcesToReconnectInner {
	if o == nil || IsNil(o.DataSourcesToReconnect) {
		var ret []GetMe200ResponseDataSourcesToReconnectInner
		return ret
	}
	return o.DataSourcesToReconnect
}

// GetDataSourcesToReconnectOk returns a tuple with the DataSourcesToReconnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetDataSourcesToReconnectOk() ([]GetMe200ResponseDataSourcesToReconnectInner, bool) {
	if o == nil || IsNil(o.DataSourcesToReconnect) {
		return nil, false
	}
	return o.DataSourcesToReconnect, true
}

// HasDataSourcesToReconnect returns a boolean if a field has been set.
func (o *GetMe200Response) HasDataSourcesToReconnect() bool {
	if o != nil && !IsNil(o.DataSourcesToReconnect) {
		return true
	}

	return false
}

// SetDataSourcesToReconnect gets a reference to the given []GetMe200ResponseDataSourcesToReconnectInner and assigns it to the DataSourcesToReconnect field.
func (o *GetMe200Response) SetDataSourcesToReconnect(v []GetMe200ResponseDataSourcesToReconnectInner) {
	o.DataSourcesToReconnect = v
}

// GetDataSources returns the DataSources field value if set, zero value otherwise.
func (o *GetMe200Response) GetDataSources() []GetMe200ResponseDataSourcesInner {
	if o == nil || IsNil(o.DataSources) {
		var ret []GetMe200ResponseDataSourcesInner
		return ret
	}
	return o.DataSources
}

// GetDataSourcesOk returns a tuple with the DataSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetDataSourcesOk() ([]GetMe200ResponseDataSourcesInner, bool) {
	if o == nil || IsNil(o.DataSources) {
		return nil, false
	}
	return o.DataSources, true
}

// HasDataSources returns a boolean if a field has been set.
func (o *GetMe200Response) HasDataSources() bool {
	if o != nil && !IsNil(o.DataSources) {
		return true
	}

	return false
}

// SetDataSources gets a reference to the given []GetMe200ResponseDataSourcesInner and assigns it to the DataSources field.
func (o *GetMe200Response) SetDataSources(v []GetMe200ResponseDataSourcesInner) {
	o.DataSources = v
}

// GetPlanFlags returns the PlanFlags field value if set, zero value otherwise.
func (o *GetMe200Response) GetPlanFlags() map[string]interface{} {
	if o == nil || IsNil(o.PlanFlags) {
		var ret map[string]interface{}
		return ret
	}
	return o.PlanFlags
}

// GetPlanFlagsOk returns a tuple with the PlanFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetPlanFlagsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PlanFlags) {
		return map[string]interface{}{}, false
	}
	return o.PlanFlags, true
}

// HasPlanFlags returns a boolean if a field has been set.
func (o *GetMe200Response) HasPlanFlags() bool {
	if o != nil && !IsNil(o.PlanFlags) {
		return true
	}

	return false
}

// SetPlanFlags gets a reference to the given map[string]interface{} and assigns it to the PlanFlags field.
func (o *GetMe200Response) SetPlanFlags(v map[string]interface{}) {
	o.PlanFlags = v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *GetMe200Response) GetFlags() []GetMe200ResponseFlagsInner {
	if o == nil || IsNil(o.Flags) {
		var ret []GetMe200ResponseFlagsInner
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetFlagsOk() ([]GetMe200ResponseFlagsInner, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *GetMe200Response) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []GetMe200ResponseFlagsInner and assigns it to the Flags field.
func (o *GetMe200Response) SetFlags(v []GetMe200ResponseFlagsInner) {
	o.Flags = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetMe200Response) GetRole() GetMe200ResponseRole {
	if o == nil || IsNil(o.Role) {
		var ret GetMe200ResponseRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetRoleOk() (*GetMe200ResponseRole, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetMe200Response) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given GetMe200ResponseRole and assigns it to the Role field.
func (o *GetMe200Response) SetRole(v GetMe200ResponseRole) {
	o.Role = &v
}

// GetCallLogSyncDate returns the CallLogSyncDate field value if set, zero value otherwise.
func (o *GetMe200Response) GetCallLogSyncDate() time.Time {
	if o == nil || IsNil(o.CallLogSyncDate) {
		var ret time.Time
		return ret
	}
	return *o.CallLogSyncDate
}

// GetCallLogSyncDateOk returns a tuple with the CallLogSyncDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetCallLogSyncDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CallLogSyncDate) {
		return nil, false
	}
	return o.CallLogSyncDate, true
}

// HasCallLogSyncDate returns a boolean if a field has been set.
func (o *GetMe200Response) HasCallLogSyncDate() bool {
	if o != nil && !IsNil(o.CallLogSyncDate) {
		return true
	}

	return false
}

// SetCallLogSyncDate gets a reference to the given time.Time and assigns it to the CallLogSyncDate field.
func (o *GetMe200Response) SetCallLogSyncDate(v time.Time) {
	o.CallLogSyncDate = &v
}

// GetTwoFaEnabled returns the TwoFaEnabled field value if set, zero value otherwise.
func (o *GetMe200Response) GetTwoFaEnabled() bool {
	if o == nil || IsNil(o.TwoFaEnabled) {
		var ret bool
		return ret
	}
	return *o.TwoFaEnabled
}

// GetTwoFaEnabledOk returns a tuple with the TwoFaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMe200Response) GetTwoFaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TwoFaEnabled) {
		return nil, false
	}
	return o.TwoFaEnabled, true
}

// HasTwoFaEnabled returns a boolean if a field has been set.
func (o *GetMe200Response) HasTwoFaEnabled() bool {
	if o != nil && !IsNil(o.TwoFaEnabled) {
		return true
	}

	return false
}

// SetTwoFaEnabled gets a reference to the given bool and assigns it to the TwoFaEnabled field.
func (o *GetMe200Response) SetTwoFaEnabled(v bool) {
	o.TwoFaEnabled = &v
}

func (o GetMe200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMe200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.AmountOfTrialDaysEarned) {
		toSerialize["amount_of_trial_days_earned"] = o.AmountOfTrialDaysEarned
	}
	if !IsNil(o.HasReceivedAccountSuggestions) {
		toSerialize["has_received_account_suggestions"] = o.HasReceivedAccountSuggestions
	}
	if !IsNil(o.HasArchivedContacts) {
		toSerialize["has_archived_contacts"] = o.HasArchivedContacts
	}
	if !IsNil(o.NotificationChannelId) {
		toSerialize["notification_channel_id"] = o.NotificationChannelId
	}
	if !IsNil(o.NeedsPassword) {
		toSerialize["needs_password"] = o.NeedsPassword
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creation_date"] = o.CreationDate
	}
	if !IsNil(o.ModificationDate) {
		toSerialize["modification_date"] = o.ModificationDate
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Firstname) {
		toSerialize["firstname"] = o.Firstname
	}
	if !IsNil(o.Middle) {
		toSerialize["middle"] = o.Middle
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.IsAdmin) {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if !IsNil(o.CreditUsage) {
		toSerialize["credit_usage"] = o.CreditUsage
	}
	if !IsNil(o.IsImporting) {
		toSerialize["is_importing"] = o.IsImporting
	}
	if !IsNil(o.SyncStatus) {
		toSerialize["sync_status"] = o.SyncStatus
	}
	if !IsNil(o.CalendarSyncStatus) {
		toSerialize["calendar_sync_status"] = o.CalendarSyncStatus
	}
	if !IsNil(o.FirstCalendarSyncDone) {
		toSerialize["first_calendar_sync_done"] = o.FirstCalendarSyncDone
	}
	if !IsNil(o.TrialExpired) {
		toSerialize["trial_expired"] = o.TrialExpired
	}
	if !IsNil(o.TrialExpiryDate) {
		toSerialize["trial_expiry_date"] = o.TrialExpiryDate
	}
	if !IsNil(o.TrialExtended) {
		toSerialize["trial_extended"] = o.TrialExtended
	}
	if !IsNil(o.Restricted) {
		toSerialize["restricted"] = o.Restricted
	}
	if !IsNil(o.RestrictedReason) {
		toSerialize["restricted_reason"] = o.RestrictedReason
	}
	if !IsNil(o.TeamDiscountCode) {
		toSerialize["team_discount_code"] = o.TeamDiscountCode
	}
	if !IsNil(o.ReferralCode) {
		toSerialize["referral_code"] = o.ReferralCode
	}
	if !IsNil(o.ReferralReward) {
		toSerialize["referral_reward"] = o.ReferralReward
	}
	if !IsNil(o.IsDelinquent) {
		toSerialize["is_delinquent"] = o.IsDelinquent
	}
	if !IsNil(o.SocialProfiles) {
		toSerialize["social_profiles"] = o.SocialProfiles
	}
	if !IsNil(o.PhoneNumbers) {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	if !IsNil(o.Positions) {
		toSerialize["positions"] = o.Positions
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.IntercomHash) {
		toSerialize["intercom_hash"] = o.IntercomHash
	}
	if !IsNil(o.FirstDayOfWeek) {
		toSerialize["first_day_of_week"] = o.FirstDayOfWeek
	}
	if !IsNil(o.AmPmNotation) {
		toSerialize["am_pm_notation"] = o.AmPmNotation
	}
	if !IsNil(o.AutoFindEmailLinkedin) {
		toSerialize["auto_find_email_linkedin"] = o.AutoFindEmailLinkedin
	}
	if !IsNil(o.DataSourcesToReconnect) {
		toSerialize["data_sources_to_reconnect"] = o.DataSourcesToReconnect
	}
	if !IsNil(o.DataSources) {
		toSerialize["data_sources"] = o.DataSources
	}
	if !IsNil(o.PlanFlags) {
		toSerialize["plan_flags"] = o.PlanFlags
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.CallLogSyncDate) {
		toSerialize["call_log_sync_date"] = o.CallLogSyncDate
	}
	if !IsNil(o.TwoFaEnabled) {
		toSerialize["two_fa_enabled"] = o.TwoFaEnabled
	}
	return toSerialize, nil
}

type NullableGetMe200Response struct {
	value *GetMe200Response
	isSet bool
}

func (v NullableGetMe200Response) Get() *GetMe200Response {
	return v.value
}

func (v *NullableGetMe200Response) Set(val *GetMe200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMe200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMe200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMe200Response(val *GetMe200Response) *NullableGetMe200Response {
	return &NullableGetMe200Response{value: val, isSet: true}
}

func (v NullableGetMe200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMe200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


