/*
Salesflare API

# Introduction  ## Getting Started  The Salesflare API allows you to access and build your own applications or integrations that interact with Salesflare.  The Salesflare API provides a RESTful interface with JSON-formatted responses to access most Salesflare resources.  ## Authentication  The Salesflare API uses bearer token based authentication, which means you need to use the key-value pair \"Authorization : Bearer APIKEY\" in the header to authenticate.  You can make an API key in [\"Settings\" > \"API keys\"](https://app.salesflare.com/#/settings/apikeys).  Click on the large orange \"+\" button on the bottom right of the screen to create an API key.  ![Screenshot API Key Settings](https://lib.salesflare.com/api_docs/screenshot_settings_apikeys.png)  ## Requests  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure your developer tools support this version of TLS as older versions or SSL are not supported for security reasons.  For PUT or POST requests (e.g. create, update), the payload must be provided as JSON in the request body.  ## Responses  Responses use HTTP status codes, with the most typical ones being:  | Code                   | Meaning               | |------------------------|-----------------------| | Successful Responses                           | | 200                    | OK                    | | Error Responses                                | | 400                    | Bad Request           | | 401                    | Unauthorized          | | 404                    | Not Found             | | 429                    | Too Many Requests     | | 500                    | Internal Server Error |  ## Testing  We recommend testing our API with Postman.  ### Download specification  Our API is documented following the OpenAPI specification. You can download it [here](https://api.salesflare.com/openapi.json)  ### Import in Postman  To import the collection, open Postman and click Import, then select \"Import From Link\"  Copy & Paste the following link and press the \"Import\" button:  > https://api.salesflare.com/openapi.json  ![Screenshot Postman Import](https://lib.salesflare.com/api_docs/screenshot_postman_import.png)  ## Support  For API questions and support, please email support@salesflare.com or click the chat bubble below.

API version: 1.0.0
Contact: support@salesflare.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package salesflare

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GetContacts200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetContacts200ResponseInner{}

// GetContacts200ResponseInner struct for GetContacts200ResponseInner
type GetContacts200ResponseInner struct {
	Account *GetContacts200ResponseInnerAccount `json:"account,omitempty"`
	Id float32 `json:"id"`
	Prefix *string `json:"prefix,omitempty"`
	Firstname *string `json:"firstname,omitempty"`
	Middle *string `json:"middle,omitempty"`
	Lastname *string `json:"lastname,omitempty"`
	Suffix *string `json:"suffix,omitempty"`
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	Domain *string `json:"domain,omitempty"`
	BirthDate *string `json:"birth_date,omitempty"`
	OptOut *bool `json:"opt-out,omitempty"`
	OptOutDate *time.Time `json:"opt-out_date,omitempty"`
	OptOutCampaign *string `json:"opt-out_campaign,omitempty"`
	Bounced *bool `json:"bounced,omitempty"`
	BouncedDate *time.Time `json:"bounced_date,omitempty"`
	Files []map[string]interface{} `json:"files,omitempty"`
	Owner *GetContacts200ResponseInnerOwner `json:"owner,omitempty"`
	Picture *string `json:"picture,omitempty"`
	Archived *bool `json:"archived,omitempty"`
	NotViewed *bool `json:"not_viewed,omitempty"`
	CanEdit *bool `json:"can_edit,omitempty"`
	CreationDate *time.Time `json:"creation_date,omitempty"`
	ModificationDate *time.Time `json:"modification_date,omitempty"`
	Type *string `json:"type,omitempty"`
	Tags []GetContacts200ResponseInnerTagsInner `json:"tags,omitempty"`
	Addresses []GetContacts200ResponseInnerAddressesInner `json:"addresses,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
	MobilePhoneNumber *string `json:"mobile_phone_number,omitempty"`
	HomePhoneNumber *string `json:"home_phone_number,omitempty"`
	FaxNumber *string `json:"fax_number,omitempty"`
	PhoneNumbers []GetContacts200ResponseInnerPhoneNumbersInner `json:"phone_numbers,omitempty"`
	Positions []GetContacts200ResponseInnerPositionsInner `json:"positions,omitempty"`
	SocialProfiles []GetContacts200ResponseInnerSocialProfilesInner `json:"social_profiles,omitempty"`
	Organisation *string `json:"organisation,omitempty"`
	Role *string `json:"role,omitempty"`
	Custom map[string]interface{} `json:"custom,omitempty"`
	LastEmailDate *time.Time `json:"last_email_date,omitempty"`
	LastMeetingDate *time.Time `json:"last_meeting_date,omitempty"`
}

type _GetContacts200ResponseInner GetContacts200ResponseInner

// NewGetContacts200ResponseInner instantiates a new GetContacts200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetContacts200ResponseInner(id float32) *GetContacts200ResponseInner {
	this := GetContacts200ResponseInner{}
	this.Id = id
	return &this
}

// NewGetContacts200ResponseInnerWithDefaults instantiates a new GetContacts200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetContacts200ResponseInnerWithDefaults() *GetContacts200ResponseInner {
	this := GetContacts200ResponseInner{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetAccount() GetContacts200ResponseInnerAccount {
	if o == nil || IsNil(o.Account) {
		var ret GetContacts200ResponseInnerAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetAccountOk() (*GetContacts200ResponseInnerAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given GetContacts200ResponseInnerAccount and assigns it to the Account field.
func (o *GetContacts200ResponseInner) SetAccount(v GetContacts200ResponseInnerAccount) {
	o.Account = &v
}

// GetId returns the Id field value
func (o *GetContacts200ResponseInner) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetContacts200ResponseInner) SetId(v float32) {
	o.Id = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *GetContacts200ResponseInner) SetPrefix(v string) {
	o.Prefix = &v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetFirstname() string {
	if o == nil || IsNil(o.Firstname) {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.Firstname) {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasFirstname() bool {
	if o != nil && !IsNil(o.Firstname) {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *GetContacts200ResponseInner) SetFirstname(v string) {
	o.Firstname = &v
}

// GetMiddle returns the Middle field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetMiddle() string {
	if o == nil || IsNil(o.Middle) {
		var ret string
		return ret
	}
	return *o.Middle
}

// GetMiddleOk returns a tuple with the Middle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetMiddleOk() (*string, bool) {
	if o == nil || IsNil(o.Middle) {
		return nil, false
	}
	return o.Middle, true
}

// HasMiddle returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasMiddle() bool {
	if o != nil && !IsNil(o.Middle) {
		return true
	}

	return false
}

// SetMiddle gets a reference to the given string and assigns it to the Middle field.
func (o *GetContacts200ResponseInner) SetMiddle(v string) {
	o.Middle = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetLastname() string {
	if o == nil || IsNil(o.Lastname) {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetLastnameOk() (*string, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *GetContacts200ResponseInner) SetLastname(v string) {
	o.Lastname = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetSuffix() string {
	if o == nil || IsNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Suffix) {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasSuffix() bool {
	if o != nil && !IsNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *GetContacts200ResponseInner) SetSuffix(v string) {
	o.Suffix = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetContacts200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetContacts200ResponseInner) SetEmail(v string) {
	o.Email = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *GetContacts200ResponseInner) SetDomain(v string) {
	o.Domain = &v
}

// GetBirthDate returns the BirthDate field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetBirthDate() string {
	if o == nil || IsNil(o.BirthDate) {
		var ret string
		return ret
	}
	return *o.BirthDate
}

// GetBirthDateOk returns a tuple with the BirthDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetBirthDateOk() (*string, bool) {
	if o == nil || IsNil(o.BirthDate) {
		return nil, false
	}
	return o.BirthDate, true
}

// HasBirthDate returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasBirthDate() bool {
	if o != nil && !IsNil(o.BirthDate) {
		return true
	}

	return false
}

// SetBirthDate gets a reference to the given string and assigns it to the BirthDate field.
func (o *GetContacts200ResponseInner) SetBirthDate(v string) {
	o.BirthDate = &v
}

// GetOptOut returns the OptOut field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetOptOut() bool {
	if o == nil || IsNil(o.OptOut) {
		var ret bool
		return ret
	}
	return *o.OptOut
}

// GetOptOutOk returns a tuple with the OptOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetOptOutOk() (*bool, bool) {
	if o == nil || IsNil(o.OptOut) {
		return nil, false
	}
	return o.OptOut, true
}

// HasOptOut returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasOptOut() bool {
	if o != nil && !IsNil(o.OptOut) {
		return true
	}

	return false
}

// SetOptOut gets a reference to the given bool and assigns it to the OptOut field.
func (o *GetContacts200ResponseInner) SetOptOut(v bool) {
	o.OptOut = &v
}

// GetOptOutDate returns the OptOutDate field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetOptOutDate() time.Time {
	if o == nil || IsNil(o.OptOutDate) {
		var ret time.Time
		return ret
	}
	return *o.OptOutDate
}

// GetOptOutDateOk returns a tuple with the OptOutDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetOptOutDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OptOutDate) {
		return nil, false
	}
	return o.OptOutDate, true
}

// HasOptOutDate returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasOptOutDate() bool {
	if o != nil && !IsNil(o.OptOutDate) {
		return true
	}

	return false
}

// SetOptOutDate gets a reference to the given time.Time and assigns it to the OptOutDate field.
func (o *GetContacts200ResponseInner) SetOptOutDate(v time.Time) {
	o.OptOutDate = &v
}

// GetOptOutCampaign returns the OptOutCampaign field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetOptOutCampaign() string {
	if o == nil || IsNil(o.OptOutCampaign) {
		var ret string
		return ret
	}
	return *o.OptOutCampaign
}

// GetOptOutCampaignOk returns a tuple with the OptOutCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetOptOutCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.OptOutCampaign) {
		return nil, false
	}
	return o.OptOutCampaign, true
}

// HasOptOutCampaign returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasOptOutCampaign() bool {
	if o != nil && !IsNil(o.OptOutCampaign) {
		return true
	}

	return false
}

// SetOptOutCampaign gets a reference to the given string and assigns it to the OptOutCampaign field.
func (o *GetContacts200ResponseInner) SetOptOutCampaign(v string) {
	o.OptOutCampaign = &v
}

// GetBounced returns the Bounced field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetBounced() bool {
	if o == nil || IsNil(o.Bounced) {
		var ret bool
		return ret
	}
	return *o.Bounced
}

// GetBouncedOk returns a tuple with the Bounced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetBouncedOk() (*bool, bool) {
	if o == nil || IsNil(o.Bounced) {
		return nil, false
	}
	return o.Bounced, true
}

// HasBounced returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasBounced() bool {
	if o != nil && !IsNil(o.Bounced) {
		return true
	}

	return false
}

// SetBounced gets a reference to the given bool and assigns it to the Bounced field.
func (o *GetContacts200ResponseInner) SetBounced(v bool) {
	o.Bounced = &v
}

// GetBouncedDate returns the BouncedDate field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetBouncedDate() time.Time {
	if o == nil || IsNil(o.BouncedDate) {
		var ret time.Time
		return ret
	}
	return *o.BouncedDate
}

// GetBouncedDateOk returns a tuple with the BouncedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetBouncedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.BouncedDate) {
		return nil, false
	}
	return o.BouncedDate, true
}

// HasBouncedDate returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasBouncedDate() bool {
	if o != nil && !IsNil(o.BouncedDate) {
		return true
	}

	return false
}

// SetBouncedDate gets a reference to the given time.Time and assigns it to the BouncedDate field.
func (o *GetContacts200ResponseInner) SetBouncedDate(v time.Time) {
	o.BouncedDate = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetFiles() []map[string]interface{} {
	if o == nil || IsNil(o.Files) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetFilesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []map[string]interface{} and assigns it to the Files field.
func (o *GetContacts200ResponseInner) SetFiles(v []map[string]interface{}) {
	o.Files = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetOwner() GetContacts200ResponseInnerOwner {
	if o == nil || IsNil(o.Owner) {
		var ret GetContacts200ResponseInnerOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetOwnerOk() (*GetContacts200ResponseInnerOwner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given GetContacts200ResponseInnerOwner and assigns it to the Owner field.
func (o *GetContacts200ResponseInner) SetOwner(v GetContacts200ResponseInnerOwner) {
	o.Owner = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetPicture() string {
	if o == nil || IsNil(o.Picture) {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetPictureOk() (*string, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *GetContacts200ResponseInner) SetPicture(v string) {
	o.Picture = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *GetContacts200ResponseInner) SetArchived(v bool) {
	o.Archived = &v
}

// GetNotViewed returns the NotViewed field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetNotViewed() bool {
	if o == nil || IsNil(o.NotViewed) {
		var ret bool
		return ret
	}
	return *o.NotViewed
}

// GetNotViewedOk returns a tuple with the NotViewed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetNotViewedOk() (*bool, bool) {
	if o == nil || IsNil(o.NotViewed) {
		return nil, false
	}
	return o.NotViewed, true
}

// HasNotViewed returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasNotViewed() bool {
	if o != nil && !IsNil(o.NotViewed) {
		return true
	}

	return false
}

// SetNotViewed gets a reference to the given bool and assigns it to the NotViewed field.
func (o *GetContacts200ResponseInner) SetNotViewed(v bool) {
	o.NotViewed = &v
}

// GetCanEdit returns the CanEdit field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetCanEdit() bool {
	if o == nil || IsNil(o.CanEdit) {
		var ret bool
		return ret
	}
	return *o.CanEdit
}

// GetCanEditOk returns a tuple with the CanEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetCanEditOk() (*bool, bool) {
	if o == nil || IsNil(o.CanEdit) {
		return nil, false
	}
	return o.CanEdit, true
}

// HasCanEdit returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasCanEdit() bool {
	if o != nil && !IsNil(o.CanEdit) {
		return true
	}

	return false
}

// SetCanEdit gets a reference to the given bool and assigns it to the CanEdit field.
func (o *GetContacts200ResponseInner) SetCanEdit(v bool) {
	o.CanEdit = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *GetContacts200ResponseInner) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetModificationDate returns the ModificationDate field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetModificationDate() time.Time {
	if o == nil || IsNil(o.ModificationDate) {
		var ret time.Time
		return ret
	}
	return *o.ModificationDate
}

// GetModificationDateOk returns a tuple with the ModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetModificationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModificationDate) {
		return nil, false
	}
	return o.ModificationDate, true
}

// HasModificationDate returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasModificationDate() bool {
	if o != nil && !IsNil(o.ModificationDate) {
		return true
	}

	return false
}

// SetModificationDate gets a reference to the given time.Time and assigns it to the ModificationDate field.
func (o *GetContacts200ResponseInner) SetModificationDate(v time.Time) {
	o.ModificationDate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetContacts200ResponseInner) SetType(v string) {
	o.Type = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetTags() []GetContacts200ResponseInnerTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []GetContacts200ResponseInnerTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetTagsOk() ([]GetContacts200ResponseInnerTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []GetContacts200ResponseInnerTagsInner and assigns it to the Tags field.
func (o *GetContacts200ResponseInner) SetTags(v []GetContacts200ResponseInnerTagsInner) {
	o.Tags = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetAddresses() []GetContacts200ResponseInnerAddressesInner {
	if o == nil || IsNil(o.Addresses) {
		var ret []GetContacts200ResponseInnerAddressesInner
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetAddressesOk() ([]GetContacts200ResponseInnerAddressesInner, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []GetContacts200ResponseInnerAddressesInner and assigns it to the Addresses field.
func (o *GetContacts200ResponseInner) SetAddresses(v []GetContacts200ResponseInnerAddressesInner) {
	o.Addresses = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *GetContacts200ResponseInner) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetMobilePhoneNumber returns the MobilePhoneNumber field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetMobilePhoneNumber() string {
	if o == nil || IsNil(o.MobilePhoneNumber) {
		var ret string
		return ret
	}
	return *o.MobilePhoneNumber
}

// GetMobilePhoneNumberOk returns a tuple with the MobilePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetMobilePhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.MobilePhoneNumber) {
		return nil, false
	}
	return o.MobilePhoneNumber, true
}

// HasMobilePhoneNumber returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasMobilePhoneNumber() bool {
	if o != nil && !IsNil(o.MobilePhoneNumber) {
		return true
	}

	return false
}

// SetMobilePhoneNumber gets a reference to the given string and assigns it to the MobilePhoneNumber field.
func (o *GetContacts200ResponseInner) SetMobilePhoneNumber(v string) {
	o.MobilePhoneNumber = &v
}

// GetHomePhoneNumber returns the HomePhoneNumber field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetHomePhoneNumber() string {
	if o == nil || IsNil(o.HomePhoneNumber) {
		var ret string
		return ret
	}
	return *o.HomePhoneNumber
}

// GetHomePhoneNumberOk returns a tuple with the HomePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetHomePhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.HomePhoneNumber) {
		return nil, false
	}
	return o.HomePhoneNumber, true
}

// HasHomePhoneNumber returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasHomePhoneNumber() bool {
	if o != nil && !IsNil(o.HomePhoneNumber) {
		return true
	}

	return false
}

// SetHomePhoneNumber gets a reference to the given string and assigns it to the HomePhoneNumber field.
func (o *GetContacts200ResponseInner) SetHomePhoneNumber(v string) {
	o.HomePhoneNumber = &v
}

// GetFaxNumber returns the FaxNumber field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetFaxNumber() string {
	if o == nil || IsNil(o.FaxNumber) {
		var ret string
		return ret
	}
	return *o.FaxNumber
}

// GetFaxNumberOk returns a tuple with the FaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetFaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FaxNumber) {
		return nil, false
	}
	return o.FaxNumber, true
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasFaxNumber() bool {
	if o != nil && !IsNil(o.FaxNumber) {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given string and assigns it to the FaxNumber field.
func (o *GetContacts200ResponseInner) SetFaxNumber(v string) {
	o.FaxNumber = &v
}

// GetPhoneNumbers returns the PhoneNumbers field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetPhoneNumbers() []GetContacts200ResponseInnerPhoneNumbersInner {
	if o == nil || IsNil(o.PhoneNumbers) {
		var ret []GetContacts200ResponseInnerPhoneNumbersInner
		return ret
	}
	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetPhoneNumbersOk() ([]GetContacts200ResponseInnerPhoneNumbersInner, bool) {
	if o == nil || IsNil(o.PhoneNumbers) {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// HasPhoneNumbers returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasPhoneNumbers() bool {
	if o != nil && !IsNil(o.PhoneNumbers) {
		return true
	}

	return false
}

// SetPhoneNumbers gets a reference to the given []GetContacts200ResponseInnerPhoneNumbersInner and assigns it to the PhoneNumbers field.
func (o *GetContacts200ResponseInner) SetPhoneNumbers(v []GetContacts200ResponseInnerPhoneNumbersInner) {
	o.PhoneNumbers = v
}

// GetPositions returns the Positions field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetPositions() []GetContacts200ResponseInnerPositionsInner {
	if o == nil || IsNil(o.Positions) {
		var ret []GetContacts200ResponseInnerPositionsInner
		return ret
	}
	return o.Positions
}

// GetPositionsOk returns a tuple with the Positions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetPositionsOk() ([]GetContacts200ResponseInnerPositionsInner, bool) {
	if o == nil || IsNil(o.Positions) {
		return nil, false
	}
	return o.Positions, true
}

// HasPositions returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasPositions() bool {
	if o != nil && !IsNil(o.Positions) {
		return true
	}

	return false
}

// SetPositions gets a reference to the given []GetContacts200ResponseInnerPositionsInner and assigns it to the Positions field.
func (o *GetContacts200ResponseInner) SetPositions(v []GetContacts200ResponseInnerPositionsInner) {
	o.Positions = v
}

// GetSocialProfiles returns the SocialProfiles field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetSocialProfiles() []GetContacts200ResponseInnerSocialProfilesInner {
	if o == nil || IsNil(o.SocialProfiles) {
		var ret []GetContacts200ResponseInnerSocialProfilesInner
		return ret
	}
	return o.SocialProfiles
}

// GetSocialProfilesOk returns a tuple with the SocialProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetSocialProfilesOk() ([]GetContacts200ResponseInnerSocialProfilesInner, bool) {
	if o == nil || IsNil(o.SocialProfiles) {
		return nil, false
	}
	return o.SocialProfiles, true
}

// HasSocialProfiles returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasSocialProfiles() bool {
	if o != nil && !IsNil(o.SocialProfiles) {
		return true
	}

	return false
}

// SetSocialProfiles gets a reference to the given []GetContacts200ResponseInnerSocialProfilesInner and assigns it to the SocialProfiles field.
func (o *GetContacts200ResponseInner) SetSocialProfiles(v []GetContacts200ResponseInnerSocialProfilesInner) {
	o.SocialProfiles = v
}

// GetOrganisation returns the Organisation field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetOrganisation() string {
	if o == nil || IsNil(o.Organisation) {
		var ret string
		return ret
	}
	return *o.Organisation
}

// GetOrganisationOk returns a tuple with the Organisation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetOrganisationOk() (*string, bool) {
	if o == nil || IsNil(o.Organisation) {
		return nil, false
	}
	return o.Organisation, true
}

// HasOrganisation returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasOrganisation() bool {
	if o != nil && !IsNil(o.Organisation) {
		return true
	}

	return false
}

// SetOrganisation gets a reference to the given string and assigns it to the Organisation field.
func (o *GetContacts200ResponseInner) SetOrganisation(v string) {
	o.Organisation = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *GetContacts200ResponseInner) SetRole(v string) {
	o.Role = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *GetContacts200ResponseInner) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetLastEmailDate returns the LastEmailDate field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetLastEmailDate() time.Time {
	if o == nil || IsNil(o.LastEmailDate) {
		var ret time.Time
		return ret
	}
	return *o.LastEmailDate
}

// GetLastEmailDateOk returns a tuple with the LastEmailDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetLastEmailDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastEmailDate) {
		return nil, false
	}
	return o.LastEmailDate, true
}

// HasLastEmailDate returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasLastEmailDate() bool {
	if o != nil && !IsNil(o.LastEmailDate) {
		return true
	}

	return false
}

// SetLastEmailDate gets a reference to the given time.Time and assigns it to the LastEmailDate field.
func (o *GetContacts200ResponseInner) SetLastEmailDate(v time.Time) {
	o.LastEmailDate = &v
}

// GetLastMeetingDate returns the LastMeetingDate field value if set, zero value otherwise.
func (o *GetContacts200ResponseInner) GetLastMeetingDate() time.Time {
	if o == nil || IsNil(o.LastMeetingDate) {
		var ret time.Time
		return ret
	}
	return *o.LastMeetingDate
}

// GetLastMeetingDateOk returns a tuple with the LastMeetingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContacts200ResponseInner) GetLastMeetingDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMeetingDate) {
		return nil, false
	}
	return o.LastMeetingDate, true
}

// HasLastMeetingDate returns a boolean if a field has been set.
func (o *GetContacts200ResponseInner) HasLastMeetingDate() bool {
	if o != nil && !IsNil(o.LastMeetingDate) {
		return true
	}

	return false
}

// SetLastMeetingDate gets a reference to the given time.Time and assigns it to the LastMeetingDate field.
func (o *GetContacts200ResponseInner) SetLastMeetingDate(v time.Time) {
	o.LastMeetingDate = &v
}

func (o GetContacts200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetContacts200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Firstname) {
		toSerialize["firstname"] = o.Firstname
	}
	if !IsNil(o.Middle) {
		toSerialize["middle"] = o.Middle
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.BirthDate) {
		toSerialize["birth_date"] = o.BirthDate
	}
	if !IsNil(o.OptOut) {
		toSerialize["opt-out"] = o.OptOut
	}
	if !IsNil(o.OptOutDate) {
		toSerialize["opt-out_date"] = o.OptOutDate
	}
	if !IsNil(o.OptOutCampaign) {
		toSerialize["opt-out_campaign"] = o.OptOutCampaign
	}
	if !IsNil(o.Bounced) {
		toSerialize["bounced"] = o.Bounced
	}
	if !IsNil(o.BouncedDate) {
		toSerialize["bounced_date"] = o.BouncedDate
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !IsNil(o.NotViewed) {
		toSerialize["not_viewed"] = o.NotViewed
	}
	if !IsNil(o.CanEdit) {
		toSerialize["can_edit"] = o.CanEdit
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creation_date"] = o.CreationDate
	}
	if !IsNil(o.ModificationDate) {
		toSerialize["modification_date"] = o.ModificationDate
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.MobilePhoneNumber) {
		toSerialize["mobile_phone_number"] = o.MobilePhoneNumber
	}
	if !IsNil(o.HomePhoneNumber) {
		toSerialize["home_phone_number"] = o.HomePhoneNumber
	}
	if !IsNil(o.FaxNumber) {
		toSerialize["fax_number"] = o.FaxNumber
	}
	if !IsNil(o.PhoneNumbers) {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	if !IsNil(o.Positions) {
		toSerialize["positions"] = o.Positions
	}
	if !IsNil(o.SocialProfiles) {
		toSerialize["social_profiles"] = o.SocialProfiles
	}
	if !IsNil(o.Organisation) {
		toSerialize["organisation"] = o.Organisation
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.LastEmailDate) {
		toSerialize["last_email_date"] = o.LastEmailDate
	}
	if !IsNil(o.LastMeetingDate) {
		toSerialize["last_meeting_date"] = o.LastMeetingDate
	}
	return toSerialize, nil
}

func (o *GetContacts200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetContacts200ResponseInner := _GetContacts200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetContacts200ResponseInner)

	if err != nil {
		return err
	}

	*o = GetContacts200ResponseInner(varGetContacts200ResponseInner)

	return err
}

type NullableGetContacts200ResponseInner struct {
	value *GetContacts200ResponseInner
	isSet bool
}

func (v NullableGetContacts200ResponseInner) Get() *GetContacts200ResponseInner {
	return v.value
}

func (v *NullableGetContacts200ResponseInner) Set(val *GetContacts200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetContacts200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetContacts200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetContacts200ResponseInner(val *GetContacts200ResponseInner) *NullableGetContacts200ResponseInner {
	return &NullableGetContacts200ResponseInner{value: val, isSet: true}
}

func (v NullableGetContacts200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetContacts200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


