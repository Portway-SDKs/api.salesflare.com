//
// GetMe200ResponseDataSourcesInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GetMe200ResponseDataSourcesInner: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case error = "ERROR"
        case reconnect = "RECONNECT"
        case ok = "OK"
    }
    public var id: Double?
    public var email: String?
    public var type: String?
    public var syncStatus: String?
    public var status: Status?
    public var statusMessage: String?

    public init(id: Double? = nil, email: String? = nil, type: String? = nil, syncStatus: String? = nil, status: Status? = nil, statusMessage: String? = nil) {
        self.id = id
        self.email = email
        self.type = type
        self.syncStatus = syncStatus
        self.status = status
        self.statusMessage = statusMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case email
        case type
        case syncStatus = "sync_status"
        case status
        case statusMessage = "status_message"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(syncStatus, forKey: .syncStatus)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(statusMessage, forKey: .statusMessage)
    }
}

