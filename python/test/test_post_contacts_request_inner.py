# coding: utf-8

"""
    Salesflare API

    # Introduction  ## Getting Started  The Salesflare API allows you to access and build your own applications or integrations that interact with Salesflare.  The Salesflare API provides a RESTful interface with JSON-formatted responses to access most Salesflare resources.  ## Authentication  The Salesflare API uses bearer token based authentication, which means you need to use the key-value pair \"Authorization : Bearer APIKEY\" in the header to authenticate.  You can make an API key in [\"Settings\" > \"API keys\"](https://app.salesflare.com/#/settings/apikeys).  Click on the large orange \"+\" button on the bottom right of the screen to create an API key.  ![Screenshot API Key Settings](https://lib.salesflare.com/api_docs/screenshot_settings_apikeys.png)  ## Requests  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure your developer tools support this version of TLS as older versions or SSL are not supported for security reasons.  For PUT or POST requests (e.g. create, update), the payload must be provided as JSON in the request body.  ## Responses  Responses use HTTP status codes, with the most typical ones being:  | Code                   | Meaning               | |------------------------|-----------------------| | Successful Responses                           | | 200                    | OK                    | | Error Responses                                | | 400                    | Bad Request           | | 401                    | Unauthorized          | | 404                    | Not Found             | | 429                    | Too Many Requests     | | 500                    | Internal Server Error |  ## Testing  We recommend testing our API with Postman.  ### Download specification  Our API is documented following the OpenAPI specification. You can download it [here](https://api.salesflare.com/openapi.json)  ### Import in Postman  To import the collection, open Postman and click Import, then select \"Import From Link\"  Copy & Paste the following link and press the \"Import\" button:  > https://api.salesflare.com/openapi.json  ![Screenshot Postman Import](https://lib.salesflare.com/api_docs/screenshot_postman_import.png)  ## Support  For API questions and support, please email support@salesflare.com or click the chat bubble below.

    The version of the OpenAPI document: 1.0.0
    Contact: support@salesflare.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from salesflare.models.post_contacts_request_inner import PostContactsRequestInner

class TestPostContactsRequestInner(unittest.TestCase):
    """PostContactsRequestInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostContactsRequestInner:
        """Test PostContactsRequestInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostContactsRequestInner`
        """
        model = PostContactsRequestInner()
        if include_optional:
            return PostContactsRequestInner(
                owner = 1.337,
                email = '',
                prefix = '',
                firstname = '',
                middle = '',
                lastname = '',
                suffix = '',
                name = '',
                picture = '',
                account = 1.337,
                birth_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                opt_out = True,
                opt_out_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                opt_out_campaign = '',
                bounced = True,
                bounced_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                files = [
                    None
                    ],
                tags = [
                    ''
                    ],
                address = salesflare.models.post_contacts_request_inner_address.postContacts_request_inner_address(
                    city = '', 
                    country = '', 
                    region = '', 
                    state_region = '', 
                    street = '', 
                    type = '', 
                    zip = '', ),
                addresses = [
                    salesflare.models.post_contacts_request_inner_address.postContacts_request_inner_address(
                        city = '', 
                        country = '', 
                        region = '', 
                        state_region = '', 
                        street = '', 
                        type = '', 
                        zip = '', )
                    ],
                phone_number = '',
                mobile_phone_number = '',
                home_phone_number = '',
                fax_number = '',
                phone_numbers = [
                    salesflare.models.post_contacts_request_inner_phone_numbers_inner.postContacts_request_inner_phone_numbers_inner(
                        number = '', 
                        type = '', )
                    ],
                position = salesflare.models.post_contacts_request_inner_position.postContacts_request_inner_position(
                    organisation = '', 
                    role = '', ),
                positions = [
                    salesflare.models.post_contacts_request_inner_position.postContacts_request_inner_position(
                        organisation = '', 
                        role = '', )
                    ],
                social_profiles = [
                    ''
                    ],
                custom = None
            )
        else:
            return PostContactsRequestInner(
        )
        """

    def testPostContactsRequestInner(self):
        """Test PostContactsRequestInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
