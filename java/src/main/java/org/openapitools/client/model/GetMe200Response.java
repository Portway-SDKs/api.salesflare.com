/*
 * Salesflare API
 * # Introduction  ## Getting Started  The Salesflare API allows you to access and build your own applications or integrations that interact with Salesflare.  The Salesflare API provides a RESTful interface with JSON-formatted responses to access most Salesflare resources.  ## Authentication  The Salesflare API uses bearer token based authentication, which means you need to use the key-value pair \"Authorization : Bearer APIKEY\" in the header to authenticate.  You can make an API key in [\"Settings\" > \"API keys\"](https://app.salesflare.com/#/settings/apikeys).  Click on the large orange \"+\" button on the bottom right of the screen to create an API key.  ![Screenshot API Key Settings](https://lib.salesflare.com/api_docs/screenshot_settings_apikeys.png)  ## Requests  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure your developer tools support this version of TLS as older versions or SSL are not supported for security reasons.  For PUT or POST requests (e.g. create, update), the payload must be provided as JSON in the request body.  ## Responses  Responses use HTTP status codes, with the most typical ones being:  | Code                   | Meaning               | |------------------------|-----------------------| | Successful Responses                           | | 200                    | OK                    | | Error Responses                                | | 400                    | Bad Request           | | 401                    | Unauthorized          | | 404                    | Not Found             | | 429                    | Too Many Requests     | | 500                    | Internal Server Error |  ## Testing  We recommend testing our API with Postman.  ### Download specification  Our API is documented following the OpenAPI specification. You can download it [here](https://api.salesflare.com/openapi.json)  ### Import in Postman  To import the collection, open Postman and click Import, then select \"Import From Link\"  Copy & Paste the following link and press the \"Import\" button:  > https://api.salesflare.com/openapi.json  ![Screenshot Postman Import](https://lib.salesflare.com/api_docs/screenshot_postman_import.png)  ## Support  For API questions and support, please email support@salesflare.com or click the chat bubble below.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salesflare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetContacts200ResponseInnerPositionsInner;
import org.openapitools.client.model.GetMe200ResponseDataSourcesInner;
import org.openapitools.client.model.GetMe200ResponseDataSourcesToReconnectInner;
import org.openapitools.client.model.GetMe200ResponseFlagsInner;
import org.openapitools.client.model.GetMe200ResponsePhoneNumbersInner;
import org.openapitools.client.model.GetMe200ResponseRole;
import org.openapitools.client.model.GetMe200ResponseSocialProfilesInner;
import org.openapitools.client.model.GetMe200ResponseTeam;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMe200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-24T18:23:43.461571613Z[UTC]", comments = "Generator version: 7.6.0")
public class GetMe200Response {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private GetMe200ResponseTeam team;

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private BigDecimal group;

  public static final String SERIALIZED_NAME_AMOUNT_OF_TRIAL_DAYS_EARNED = "amount_of_trial_days_earned";
  @SerializedName(SERIALIZED_NAME_AMOUNT_OF_TRIAL_DAYS_EARNED)
  private BigDecimal amountOfTrialDaysEarned;

  public static final String SERIALIZED_NAME_HAS_RECEIVED_ACCOUNT_SUGGESTIONS = "has_received_account_suggestions";
  @SerializedName(SERIALIZED_NAME_HAS_RECEIVED_ACCOUNT_SUGGESTIONS)
  private Boolean hasReceivedAccountSuggestions;

  public static final String SERIALIZED_NAME_HAS_ARCHIVED_CONTACTS = "has_archived_contacts";
  @SerializedName(SERIALIZED_NAME_HAS_ARCHIVED_CONTACTS)
  private Boolean hasArchivedContacts;

  public static final String SERIALIZED_NAME_NOTIFICATION_CHANNEL_ID = "notification_channel_id";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_CHANNEL_ID)
  private String notificationChannelId;

  public static final String SERIALIZED_NAME_NEEDS_PASSWORD = "needs_password";
  @SerializedName(SERIALIZED_NAME_NEEDS_PASSWORD)
  private Boolean needsPassword;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_MODIFICATION_DATE = "modification_date";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_DATE)
  private OffsetDateTime modificationDate;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_MIDDLE = "middle";
  @SerializedName(SERIALIZED_NAME_MIDDLE)
  private String middle;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_PICTURE = "picture";
  @SerializedName(SERIALIZED_NAME_PICTURE)
  private String picture;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_IS_ADMIN = "is_admin";
  @SerializedName(SERIALIZED_NAME_IS_ADMIN)
  private Boolean isAdmin;

  public static final String SERIALIZED_NAME_CREDIT_USAGE = "credit_usage";
  @SerializedName(SERIALIZED_NAME_CREDIT_USAGE)
  private BigDecimal creditUsage;

  public static final String SERIALIZED_NAME_IS_IMPORTING = "is_importing";
  @SerializedName(SERIALIZED_NAME_IS_IMPORTING)
  private Boolean isImporting;

  public static final String SERIALIZED_NAME_SYNC_STATUS = "sync_status";
  @SerializedName(SERIALIZED_NAME_SYNC_STATUS)
  private String syncStatus;

  public static final String SERIALIZED_NAME_CALENDAR_SYNC_STATUS = "calendar_sync_status";
  @SerializedName(SERIALIZED_NAME_CALENDAR_SYNC_STATUS)
  private String calendarSyncStatus;

  public static final String SERIALIZED_NAME_FIRST_CALENDAR_SYNC_DONE = "first_calendar_sync_done";
  @SerializedName(SERIALIZED_NAME_FIRST_CALENDAR_SYNC_DONE)
  private Boolean firstCalendarSyncDone;

  public static final String SERIALIZED_NAME_TRIAL_EXPIRED = "trial_expired";
  @SerializedName(SERIALIZED_NAME_TRIAL_EXPIRED)
  private Boolean trialExpired;

  public static final String SERIALIZED_NAME_TRIAL_EXPIRY_DATE = "trial_expiry_date";
  @SerializedName(SERIALIZED_NAME_TRIAL_EXPIRY_DATE)
  private OffsetDateTime trialExpiryDate;

  public static final String SERIALIZED_NAME_TRIAL_EXTENDED = "trial_extended";
  @SerializedName(SERIALIZED_NAME_TRIAL_EXTENDED)
  private Boolean trialExtended;

  public static final String SERIALIZED_NAME_RESTRICTED = "restricted";
  @SerializedName(SERIALIZED_NAME_RESTRICTED)
  private Boolean restricted;

  public static final String SERIALIZED_NAME_RESTRICTED_REASON = "restricted_reason";
  @SerializedName(SERIALIZED_NAME_RESTRICTED_REASON)
  private String restrictedReason;

  public static final String SERIALIZED_NAME_TEAM_DISCOUNT_CODE = "team_discount_code";
  @SerializedName(SERIALIZED_NAME_TEAM_DISCOUNT_CODE)
  private String teamDiscountCode;

  public static final String SERIALIZED_NAME_REFERRAL_CODE = "referral_code";
  @SerializedName(SERIALIZED_NAME_REFERRAL_CODE)
  private String referralCode;

  public static final String SERIALIZED_NAME_REFERRAL_REWARD = "referral_reward";
  @SerializedName(SERIALIZED_NAME_REFERRAL_REWARD)
  private BigDecimal referralReward;

  public static final String SERIALIZED_NAME_IS_DELINQUENT = "is_delinquent";
  @SerializedName(SERIALIZED_NAME_IS_DELINQUENT)
  private Boolean isDelinquent;

  public static final String SERIALIZED_NAME_SOCIAL_PROFILES = "social_profiles";
  @SerializedName(SERIALIZED_NAME_SOCIAL_PROFILES)
  private List<GetMe200ResponseSocialProfilesInner> socialProfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phone_numbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<GetMe200ResponsePhoneNumbersInner> phoneNumbers = new ArrayList<>();

  public static final String SERIALIZED_NAME_POSITIONS = "positions";
  @SerializedName(SERIALIZED_NAME_POSITIONS)
  private List<GetContacts200ResponseInnerPositionsInner> positions = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<Object> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Object> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_INTERCOM_HASH = "intercom_hash";
  @SerializedName(SERIALIZED_NAME_INTERCOM_HASH)
  private String intercomHash;

  public static final String SERIALIZED_NAME_FIRST_DAY_OF_WEEK = "first_day_of_week";
  @SerializedName(SERIALIZED_NAME_FIRST_DAY_OF_WEEK)
  private BigDecimal firstDayOfWeek;

  public static final String SERIALIZED_NAME_AM_PM_NOTATION = "am_pm_notation";
  @SerializedName(SERIALIZED_NAME_AM_PM_NOTATION)
  private Boolean amPmNotation;

  public static final String SERIALIZED_NAME_AUTO_FIND_EMAIL_LINKEDIN = "auto_find_email_linkedin";
  @SerializedName(SERIALIZED_NAME_AUTO_FIND_EMAIL_LINKEDIN)
  private Boolean autoFindEmailLinkedin;

  public static final String SERIALIZED_NAME_DATA_SOURCES_TO_RECONNECT = "data_sources_to_reconnect";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCES_TO_RECONNECT)
  private List<GetMe200ResponseDataSourcesToReconnectInner> dataSourcesToReconnect = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATA_SOURCES = "data_sources";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCES)
  private List<GetMe200ResponseDataSourcesInner> dataSources = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLAN_FLAGS = "plan_flags";
  @SerializedName(SERIALIZED_NAME_PLAN_FLAGS)
  private Object planFlags;

  public static final String SERIALIZED_NAME_FLAGS = "flags";
  @SerializedName(SERIALIZED_NAME_FLAGS)
  private List<GetMe200ResponseFlagsInner> flags = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private GetMe200ResponseRole role;

  public static final String SERIALIZED_NAME_CALL_LOG_SYNC_DATE = "call_log_sync_date";
  @SerializedName(SERIALIZED_NAME_CALL_LOG_SYNC_DATE)
  private OffsetDateTime callLogSyncDate;

  public static final String SERIALIZED_NAME_TWO_FA_ENABLED = "two_fa_enabled";
  @SerializedName(SERIALIZED_NAME_TWO_FA_ENABLED)
  private Boolean twoFaEnabled;

  public GetMe200Response() {
  }

  public GetMe200Response id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  public GetMe200Response team(GetMe200ResponseTeam team) {
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  public GetMe200ResponseTeam getTeam() {
    return team;
  }

  public void setTeam(GetMe200ResponseTeam team) {
    this.team = team;
  }


  public GetMe200Response group(BigDecimal group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  public BigDecimal getGroup() {
    return group;
  }

  public void setGroup(BigDecimal group) {
    this.group = group;
  }


  public GetMe200Response amountOfTrialDaysEarned(BigDecimal amountOfTrialDaysEarned) {
    this.amountOfTrialDaysEarned = amountOfTrialDaysEarned;
    return this;
  }

   /**
   * Get amountOfTrialDaysEarned
   * @return amountOfTrialDaysEarned
  **/
  @javax.annotation.Nullable
  public BigDecimal getAmountOfTrialDaysEarned() {
    return amountOfTrialDaysEarned;
  }

  public void setAmountOfTrialDaysEarned(BigDecimal amountOfTrialDaysEarned) {
    this.amountOfTrialDaysEarned = amountOfTrialDaysEarned;
  }


  public GetMe200Response hasReceivedAccountSuggestions(Boolean hasReceivedAccountSuggestions) {
    this.hasReceivedAccountSuggestions = hasReceivedAccountSuggestions;
    return this;
  }

   /**
   * Get hasReceivedAccountSuggestions
   * @return hasReceivedAccountSuggestions
  **/
  @javax.annotation.Nullable
  public Boolean getHasReceivedAccountSuggestions() {
    return hasReceivedAccountSuggestions;
  }

  public void setHasReceivedAccountSuggestions(Boolean hasReceivedAccountSuggestions) {
    this.hasReceivedAccountSuggestions = hasReceivedAccountSuggestions;
  }


  public GetMe200Response hasArchivedContacts(Boolean hasArchivedContacts) {
    this.hasArchivedContacts = hasArchivedContacts;
    return this;
  }

   /**
   * Get hasArchivedContacts
   * @return hasArchivedContacts
  **/
  @javax.annotation.Nullable
  public Boolean getHasArchivedContacts() {
    return hasArchivedContacts;
  }

  public void setHasArchivedContacts(Boolean hasArchivedContacts) {
    this.hasArchivedContacts = hasArchivedContacts;
  }


  public GetMe200Response notificationChannelId(String notificationChannelId) {
    this.notificationChannelId = notificationChannelId;
    return this;
  }

   /**
   * Get notificationChannelId
   * @return notificationChannelId
  **/
  @javax.annotation.Nullable
  public String getNotificationChannelId() {
    return notificationChannelId;
  }

  public void setNotificationChannelId(String notificationChannelId) {
    this.notificationChannelId = notificationChannelId;
  }


  public GetMe200Response needsPassword(Boolean needsPassword) {
    this.needsPassword = needsPassword;
    return this;
  }

   /**
   * Get needsPassword
   * @return needsPassword
  **/
  @javax.annotation.Nullable
  public Boolean getNeedsPassword() {
    return needsPassword;
  }

  public void setNeedsPassword(Boolean needsPassword) {
    this.needsPassword = needsPassword;
  }


  public GetMe200Response disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  public Boolean getDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public GetMe200Response creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public GetMe200Response modificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }


  public GetMe200Response prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public GetMe200Response firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public GetMe200Response middle(String middle) {
    this.middle = middle;
    return this;
  }

   /**
   * Get middle
   * @return middle
  **/
  @javax.annotation.Nullable
  public String getMiddle() {
    return middle;
  }

  public void setMiddle(String middle) {
    this.middle = middle;
  }


  public GetMe200Response lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public GetMe200Response suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

   /**
   * Get suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public GetMe200Response name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetMe200Response email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public GetMe200Response domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public GetMe200Response picture(String picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Get picture
   * @return picture
  **/
  @javax.annotation.Nullable
  public String getPicture() {
    return picture;
  }

  public void setPicture(String picture) {
    this.picture = picture;
  }


  public GetMe200Response type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public GetMe200Response isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

   /**
   * Get isAdmin
   * @return isAdmin
  **/
  @javax.annotation.Nullable
  public Boolean getIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }


  public GetMe200Response creditUsage(BigDecimal creditUsage) {
    this.creditUsage = creditUsage;
    return this;
  }

   /**
   * Get creditUsage
   * @return creditUsage
  **/
  @javax.annotation.Nullable
  public BigDecimal getCreditUsage() {
    return creditUsage;
  }

  public void setCreditUsage(BigDecimal creditUsage) {
    this.creditUsage = creditUsage;
  }


  public GetMe200Response isImporting(Boolean isImporting) {
    this.isImporting = isImporting;
    return this;
  }

   /**
   * Get isImporting
   * @return isImporting
  **/
  @javax.annotation.Nullable
  public Boolean getIsImporting() {
    return isImporting;
  }

  public void setIsImporting(Boolean isImporting) {
    this.isImporting = isImporting;
  }


  public GetMe200Response syncStatus(String syncStatus) {
    this.syncStatus = syncStatus;
    return this;
  }

   /**
   * Get syncStatus
   * @return syncStatus
  **/
  @javax.annotation.Nullable
  public String getSyncStatus() {
    return syncStatus;
  }

  public void setSyncStatus(String syncStatus) {
    this.syncStatus = syncStatus;
  }


  public GetMe200Response calendarSyncStatus(String calendarSyncStatus) {
    this.calendarSyncStatus = calendarSyncStatus;
    return this;
  }

   /**
   * Get calendarSyncStatus
   * @return calendarSyncStatus
  **/
  @javax.annotation.Nullable
  public String getCalendarSyncStatus() {
    return calendarSyncStatus;
  }

  public void setCalendarSyncStatus(String calendarSyncStatus) {
    this.calendarSyncStatus = calendarSyncStatus;
  }


  public GetMe200Response firstCalendarSyncDone(Boolean firstCalendarSyncDone) {
    this.firstCalendarSyncDone = firstCalendarSyncDone;
    return this;
  }

   /**
   * Get firstCalendarSyncDone
   * @return firstCalendarSyncDone
  **/
  @javax.annotation.Nullable
  public Boolean getFirstCalendarSyncDone() {
    return firstCalendarSyncDone;
  }

  public void setFirstCalendarSyncDone(Boolean firstCalendarSyncDone) {
    this.firstCalendarSyncDone = firstCalendarSyncDone;
  }


  public GetMe200Response trialExpired(Boolean trialExpired) {
    this.trialExpired = trialExpired;
    return this;
  }

   /**
   * Get trialExpired
   * @return trialExpired
  **/
  @javax.annotation.Nullable
  public Boolean getTrialExpired() {
    return trialExpired;
  }

  public void setTrialExpired(Boolean trialExpired) {
    this.trialExpired = trialExpired;
  }


  public GetMe200Response trialExpiryDate(OffsetDateTime trialExpiryDate) {
    this.trialExpiryDate = trialExpiryDate;
    return this;
  }

   /**
   * Get trialExpiryDate
   * @return trialExpiryDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getTrialExpiryDate() {
    return trialExpiryDate;
  }

  public void setTrialExpiryDate(OffsetDateTime trialExpiryDate) {
    this.trialExpiryDate = trialExpiryDate;
  }


  public GetMe200Response trialExtended(Boolean trialExtended) {
    this.trialExtended = trialExtended;
    return this;
  }

   /**
   * Get trialExtended
   * @return trialExtended
  **/
  @javax.annotation.Nullable
  public Boolean getTrialExtended() {
    return trialExtended;
  }

  public void setTrialExtended(Boolean trialExtended) {
    this.trialExtended = trialExtended;
  }


  public GetMe200Response restricted(Boolean restricted) {
    this.restricted = restricted;
    return this;
  }

   /**
   * Get restricted
   * @return restricted
  **/
  @javax.annotation.Nullable
  public Boolean getRestricted() {
    return restricted;
  }

  public void setRestricted(Boolean restricted) {
    this.restricted = restricted;
  }


  public GetMe200Response restrictedReason(String restrictedReason) {
    this.restrictedReason = restrictedReason;
    return this;
  }

   /**
   * Get restrictedReason
   * @return restrictedReason
  **/
  @javax.annotation.Nullable
  public String getRestrictedReason() {
    return restrictedReason;
  }

  public void setRestrictedReason(String restrictedReason) {
    this.restrictedReason = restrictedReason;
  }


  public GetMe200Response teamDiscountCode(String teamDiscountCode) {
    this.teamDiscountCode = teamDiscountCode;
    return this;
  }

   /**
   * Get teamDiscountCode
   * @return teamDiscountCode
  **/
  @javax.annotation.Nullable
  public String getTeamDiscountCode() {
    return teamDiscountCode;
  }

  public void setTeamDiscountCode(String teamDiscountCode) {
    this.teamDiscountCode = teamDiscountCode;
  }


  public GetMe200Response referralCode(String referralCode) {
    this.referralCode = referralCode;
    return this;
  }

   /**
   * Get referralCode
   * @return referralCode
  **/
  @javax.annotation.Nullable
  public String getReferralCode() {
    return referralCode;
  }

  public void setReferralCode(String referralCode) {
    this.referralCode = referralCode;
  }


  public GetMe200Response referralReward(BigDecimal referralReward) {
    this.referralReward = referralReward;
    return this;
  }

   /**
   * Get referralReward
   * @return referralReward
  **/
  @javax.annotation.Nullable
  public BigDecimal getReferralReward() {
    return referralReward;
  }

  public void setReferralReward(BigDecimal referralReward) {
    this.referralReward = referralReward;
  }


  public GetMe200Response isDelinquent(Boolean isDelinquent) {
    this.isDelinquent = isDelinquent;
    return this;
  }

   /**
   * Get isDelinquent
   * @return isDelinquent
  **/
  @javax.annotation.Nullable
  public Boolean getIsDelinquent() {
    return isDelinquent;
  }

  public void setIsDelinquent(Boolean isDelinquent) {
    this.isDelinquent = isDelinquent;
  }


  public GetMe200Response socialProfiles(List<GetMe200ResponseSocialProfilesInner> socialProfiles) {
    this.socialProfiles = socialProfiles;
    return this;
  }

  public GetMe200Response addSocialProfilesItem(GetMe200ResponseSocialProfilesInner socialProfilesItem) {
    if (this.socialProfiles == null) {
      this.socialProfiles = new ArrayList<>();
    }
    this.socialProfiles.add(socialProfilesItem);
    return this;
  }

   /**
   * Get socialProfiles
   * @return socialProfiles
  **/
  @javax.annotation.Nullable
  public List<GetMe200ResponseSocialProfilesInner> getSocialProfiles() {
    return socialProfiles;
  }

  public void setSocialProfiles(List<GetMe200ResponseSocialProfilesInner> socialProfiles) {
    this.socialProfiles = socialProfiles;
  }


  public GetMe200Response phoneNumbers(List<GetMe200ResponsePhoneNumbersInner> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public GetMe200Response addPhoneNumbersItem(GetMe200ResponsePhoneNumbersInner phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  public List<GetMe200ResponsePhoneNumbersInner> getPhoneNumbers() {
    return phoneNumbers;
  }

  public void setPhoneNumbers(List<GetMe200ResponsePhoneNumbersInner> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public GetMe200Response positions(List<GetContacts200ResponseInnerPositionsInner> positions) {
    this.positions = positions;
    return this;
  }

  public GetMe200Response addPositionsItem(GetContacts200ResponseInnerPositionsInner positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

   /**
   * Get positions
   * @return positions
  **/
  @javax.annotation.Nullable
  public List<GetContacts200ResponseInnerPositionsInner> getPositions() {
    return positions;
  }

  public void setPositions(List<GetContacts200ResponseInnerPositionsInner> positions) {
    this.positions = positions;
  }


  public GetMe200Response addresses(List<Object> addresses) {
    this.addresses = addresses;
    return this;
  }

  public GetMe200Response addAddressesItem(Object addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  public List<Object> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<Object> addresses) {
    this.addresses = addresses;
  }


  public GetMe200Response tags(List<Object> tags) {
    this.tags = tags;
    return this;
  }

  public GetMe200Response addTagsItem(Object tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<Object> getTags() {
    return tags;
  }

  public void setTags(List<Object> tags) {
    this.tags = tags;
  }


  public GetMe200Response intercomHash(String intercomHash) {
    this.intercomHash = intercomHash;
    return this;
  }

   /**
   * Get intercomHash
   * @return intercomHash
  **/
  @javax.annotation.Nullable
  public String getIntercomHash() {
    return intercomHash;
  }

  public void setIntercomHash(String intercomHash) {
    this.intercomHash = intercomHash;
  }


  public GetMe200Response firstDayOfWeek(BigDecimal firstDayOfWeek) {
    this.firstDayOfWeek = firstDayOfWeek;
    return this;
  }

   /**
   * Get firstDayOfWeek
   * @return firstDayOfWeek
  **/
  @javax.annotation.Nullable
  public BigDecimal getFirstDayOfWeek() {
    return firstDayOfWeek;
  }

  public void setFirstDayOfWeek(BigDecimal firstDayOfWeek) {
    this.firstDayOfWeek = firstDayOfWeek;
  }


  public GetMe200Response amPmNotation(Boolean amPmNotation) {
    this.amPmNotation = amPmNotation;
    return this;
  }

   /**
   * Get amPmNotation
   * @return amPmNotation
  **/
  @javax.annotation.Nullable
  public Boolean getAmPmNotation() {
    return amPmNotation;
  }

  public void setAmPmNotation(Boolean amPmNotation) {
    this.amPmNotation = amPmNotation;
  }


  public GetMe200Response autoFindEmailLinkedin(Boolean autoFindEmailLinkedin) {
    this.autoFindEmailLinkedin = autoFindEmailLinkedin;
    return this;
  }

   /**
   * Get autoFindEmailLinkedin
   * @return autoFindEmailLinkedin
  **/
  @javax.annotation.Nullable
  public Boolean getAutoFindEmailLinkedin() {
    return autoFindEmailLinkedin;
  }

  public void setAutoFindEmailLinkedin(Boolean autoFindEmailLinkedin) {
    this.autoFindEmailLinkedin = autoFindEmailLinkedin;
  }


  public GetMe200Response dataSourcesToReconnect(List<GetMe200ResponseDataSourcesToReconnectInner> dataSourcesToReconnect) {
    this.dataSourcesToReconnect = dataSourcesToReconnect;
    return this;
  }

  public GetMe200Response addDataSourcesToReconnectItem(GetMe200ResponseDataSourcesToReconnectInner dataSourcesToReconnectItem) {
    if (this.dataSourcesToReconnect == null) {
      this.dataSourcesToReconnect = new ArrayList<>();
    }
    this.dataSourcesToReconnect.add(dataSourcesToReconnectItem);
    return this;
  }

   /**
   * Get dataSourcesToReconnect
   * @return dataSourcesToReconnect
  **/
  @javax.annotation.Nullable
  public List<GetMe200ResponseDataSourcesToReconnectInner> getDataSourcesToReconnect() {
    return dataSourcesToReconnect;
  }

  public void setDataSourcesToReconnect(List<GetMe200ResponseDataSourcesToReconnectInner> dataSourcesToReconnect) {
    this.dataSourcesToReconnect = dataSourcesToReconnect;
  }


  public GetMe200Response dataSources(List<GetMe200ResponseDataSourcesInner> dataSources) {
    this.dataSources = dataSources;
    return this;
  }

  public GetMe200Response addDataSourcesItem(GetMe200ResponseDataSourcesInner dataSourcesItem) {
    if (this.dataSources == null) {
      this.dataSources = new ArrayList<>();
    }
    this.dataSources.add(dataSourcesItem);
    return this;
  }

   /**
   * Get dataSources
   * @return dataSources
  **/
  @javax.annotation.Nullable
  public List<GetMe200ResponseDataSourcesInner> getDataSources() {
    return dataSources;
  }

  public void setDataSources(List<GetMe200ResponseDataSourcesInner> dataSources) {
    this.dataSources = dataSources;
  }


  public GetMe200Response planFlags(Object planFlags) {
    this.planFlags = planFlags;
    return this;
  }

   /**
   * Get planFlags
   * @return planFlags
  **/
  @javax.annotation.Nullable
  public Object getPlanFlags() {
    return planFlags;
  }

  public void setPlanFlags(Object planFlags) {
    this.planFlags = planFlags;
  }


  public GetMe200Response flags(List<GetMe200ResponseFlagsInner> flags) {
    this.flags = flags;
    return this;
  }

  public GetMe200Response addFlagsItem(GetMe200ResponseFlagsInner flagsItem) {
    if (this.flags == null) {
      this.flags = new ArrayList<>();
    }
    this.flags.add(flagsItem);
    return this;
  }

   /**
   * Get flags
   * @return flags
  **/
  @javax.annotation.Nullable
  public List<GetMe200ResponseFlagsInner> getFlags() {
    return flags;
  }

  public void setFlags(List<GetMe200ResponseFlagsInner> flags) {
    this.flags = flags;
  }


  public GetMe200Response role(GetMe200ResponseRole role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  public GetMe200ResponseRole getRole() {
    return role;
  }

  public void setRole(GetMe200ResponseRole role) {
    this.role = role;
  }


  public GetMe200Response callLogSyncDate(OffsetDateTime callLogSyncDate) {
    this.callLogSyncDate = callLogSyncDate;
    return this;
  }

   /**
   * Get callLogSyncDate
   * @return callLogSyncDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCallLogSyncDate() {
    return callLogSyncDate;
  }

  public void setCallLogSyncDate(OffsetDateTime callLogSyncDate) {
    this.callLogSyncDate = callLogSyncDate;
  }


  public GetMe200Response twoFaEnabled(Boolean twoFaEnabled) {
    this.twoFaEnabled = twoFaEnabled;
    return this;
  }

   /**
   * Get twoFaEnabled
   * @return twoFaEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getTwoFaEnabled() {
    return twoFaEnabled;
  }

  public void setTwoFaEnabled(Boolean twoFaEnabled) {
    this.twoFaEnabled = twoFaEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMe200Response getMe200Response = (GetMe200Response) o;
    return Objects.equals(this.id, getMe200Response.id) &&
        Objects.equals(this.team, getMe200Response.team) &&
        Objects.equals(this.group, getMe200Response.group) &&
        Objects.equals(this.amountOfTrialDaysEarned, getMe200Response.amountOfTrialDaysEarned) &&
        Objects.equals(this.hasReceivedAccountSuggestions, getMe200Response.hasReceivedAccountSuggestions) &&
        Objects.equals(this.hasArchivedContacts, getMe200Response.hasArchivedContacts) &&
        Objects.equals(this.notificationChannelId, getMe200Response.notificationChannelId) &&
        Objects.equals(this.needsPassword, getMe200Response.needsPassword) &&
        Objects.equals(this.disabled, getMe200Response.disabled) &&
        Objects.equals(this.creationDate, getMe200Response.creationDate) &&
        Objects.equals(this.modificationDate, getMe200Response.modificationDate) &&
        Objects.equals(this.prefix, getMe200Response.prefix) &&
        Objects.equals(this.firstname, getMe200Response.firstname) &&
        Objects.equals(this.middle, getMe200Response.middle) &&
        Objects.equals(this.lastname, getMe200Response.lastname) &&
        Objects.equals(this.suffix, getMe200Response.suffix) &&
        Objects.equals(this.name, getMe200Response.name) &&
        Objects.equals(this.email, getMe200Response.email) &&
        Objects.equals(this.domain, getMe200Response.domain) &&
        Objects.equals(this.picture, getMe200Response.picture) &&
        Objects.equals(this.type, getMe200Response.type) &&
        Objects.equals(this.isAdmin, getMe200Response.isAdmin) &&
        Objects.equals(this.creditUsage, getMe200Response.creditUsage) &&
        Objects.equals(this.isImporting, getMe200Response.isImporting) &&
        Objects.equals(this.syncStatus, getMe200Response.syncStatus) &&
        Objects.equals(this.calendarSyncStatus, getMe200Response.calendarSyncStatus) &&
        Objects.equals(this.firstCalendarSyncDone, getMe200Response.firstCalendarSyncDone) &&
        Objects.equals(this.trialExpired, getMe200Response.trialExpired) &&
        Objects.equals(this.trialExpiryDate, getMe200Response.trialExpiryDate) &&
        Objects.equals(this.trialExtended, getMe200Response.trialExtended) &&
        Objects.equals(this.restricted, getMe200Response.restricted) &&
        Objects.equals(this.restrictedReason, getMe200Response.restrictedReason) &&
        Objects.equals(this.teamDiscountCode, getMe200Response.teamDiscountCode) &&
        Objects.equals(this.referralCode, getMe200Response.referralCode) &&
        Objects.equals(this.referralReward, getMe200Response.referralReward) &&
        Objects.equals(this.isDelinquent, getMe200Response.isDelinquent) &&
        Objects.equals(this.socialProfiles, getMe200Response.socialProfiles) &&
        Objects.equals(this.phoneNumbers, getMe200Response.phoneNumbers) &&
        Objects.equals(this.positions, getMe200Response.positions) &&
        Objects.equals(this.addresses, getMe200Response.addresses) &&
        Objects.equals(this.tags, getMe200Response.tags) &&
        Objects.equals(this.intercomHash, getMe200Response.intercomHash) &&
        Objects.equals(this.firstDayOfWeek, getMe200Response.firstDayOfWeek) &&
        Objects.equals(this.amPmNotation, getMe200Response.amPmNotation) &&
        Objects.equals(this.autoFindEmailLinkedin, getMe200Response.autoFindEmailLinkedin) &&
        Objects.equals(this.dataSourcesToReconnect, getMe200Response.dataSourcesToReconnect) &&
        Objects.equals(this.dataSources, getMe200Response.dataSources) &&
        Objects.equals(this.planFlags, getMe200Response.planFlags) &&
        Objects.equals(this.flags, getMe200Response.flags) &&
        Objects.equals(this.role, getMe200Response.role) &&
        Objects.equals(this.callLogSyncDate, getMe200Response.callLogSyncDate) &&
        Objects.equals(this.twoFaEnabled, getMe200Response.twoFaEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, team, group, amountOfTrialDaysEarned, hasReceivedAccountSuggestions, hasArchivedContacts, notificationChannelId, needsPassword, disabled, creationDate, modificationDate, prefix, firstname, middle, lastname, suffix, name, email, domain, picture, type, isAdmin, creditUsage, isImporting, syncStatus, calendarSyncStatus, firstCalendarSyncDone, trialExpired, trialExpiryDate, trialExtended, restricted, restrictedReason, teamDiscountCode, referralCode, referralReward, isDelinquent, socialProfiles, phoneNumbers, positions, addresses, tags, intercomHash, firstDayOfWeek, amPmNotation, autoFindEmailLinkedin, dataSourcesToReconnect, dataSources, planFlags, flags, role, callLogSyncDate, twoFaEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMe200Response {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    amountOfTrialDaysEarned: ").append(toIndentedString(amountOfTrialDaysEarned)).append("\n");
    sb.append("    hasReceivedAccountSuggestions: ").append(toIndentedString(hasReceivedAccountSuggestions)).append("\n");
    sb.append("    hasArchivedContacts: ").append(toIndentedString(hasArchivedContacts)).append("\n");
    sb.append("    notificationChannelId: ").append(toIndentedString(notificationChannelId)).append("\n");
    sb.append("    needsPassword: ").append(toIndentedString(needsPassword)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    middle: ").append(toIndentedString(middle)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    creditUsage: ").append(toIndentedString(creditUsage)).append("\n");
    sb.append("    isImporting: ").append(toIndentedString(isImporting)).append("\n");
    sb.append("    syncStatus: ").append(toIndentedString(syncStatus)).append("\n");
    sb.append("    calendarSyncStatus: ").append(toIndentedString(calendarSyncStatus)).append("\n");
    sb.append("    firstCalendarSyncDone: ").append(toIndentedString(firstCalendarSyncDone)).append("\n");
    sb.append("    trialExpired: ").append(toIndentedString(trialExpired)).append("\n");
    sb.append("    trialExpiryDate: ").append(toIndentedString(trialExpiryDate)).append("\n");
    sb.append("    trialExtended: ").append(toIndentedString(trialExtended)).append("\n");
    sb.append("    restricted: ").append(toIndentedString(restricted)).append("\n");
    sb.append("    restrictedReason: ").append(toIndentedString(restrictedReason)).append("\n");
    sb.append("    teamDiscountCode: ").append(toIndentedString(teamDiscountCode)).append("\n");
    sb.append("    referralCode: ").append(toIndentedString(referralCode)).append("\n");
    sb.append("    referralReward: ").append(toIndentedString(referralReward)).append("\n");
    sb.append("    isDelinquent: ").append(toIndentedString(isDelinquent)).append("\n");
    sb.append("    socialProfiles: ").append(toIndentedString(socialProfiles)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    intercomHash: ").append(toIndentedString(intercomHash)).append("\n");
    sb.append("    firstDayOfWeek: ").append(toIndentedString(firstDayOfWeek)).append("\n");
    sb.append("    amPmNotation: ").append(toIndentedString(amPmNotation)).append("\n");
    sb.append("    autoFindEmailLinkedin: ").append(toIndentedString(autoFindEmailLinkedin)).append("\n");
    sb.append("    dataSourcesToReconnect: ").append(toIndentedString(dataSourcesToReconnect)).append("\n");
    sb.append("    dataSources: ").append(toIndentedString(dataSources)).append("\n");
    sb.append("    planFlags: ").append(toIndentedString(planFlags)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    callLogSyncDate: ").append(toIndentedString(callLogSyncDate)).append("\n");
    sb.append("    twoFaEnabled: ").append(toIndentedString(twoFaEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("team");
    openapiFields.add("group");
    openapiFields.add("amount_of_trial_days_earned");
    openapiFields.add("has_received_account_suggestions");
    openapiFields.add("has_archived_contacts");
    openapiFields.add("notification_channel_id");
    openapiFields.add("needs_password");
    openapiFields.add("disabled");
    openapiFields.add("creation_date");
    openapiFields.add("modification_date");
    openapiFields.add("prefix");
    openapiFields.add("firstname");
    openapiFields.add("middle");
    openapiFields.add("lastname");
    openapiFields.add("suffix");
    openapiFields.add("name");
    openapiFields.add("email");
    openapiFields.add("domain");
    openapiFields.add("picture");
    openapiFields.add("type");
    openapiFields.add("is_admin");
    openapiFields.add("credit_usage");
    openapiFields.add("is_importing");
    openapiFields.add("sync_status");
    openapiFields.add("calendar_sync_status");
    openapiFields.add("first_calendar_sync_done");
    openapiFields.add("trial_expired");
    openapiFields.add("trial_expiry_date");
    openapiFields.add("trial_extended");
    openapiFields.add("restricted");
    openapiFields.add("restricted_reason");
    openapiFields.add("team_discount_code");
    openapiFields.add("referral_code");
    openapiFields.add("referral_reward");
    openapiFields.add("is_delinquent");
    openapiFields.add("social_profiles");
    openapiFields.add("phone_numbers");
    openapiFields.add("positions");
    openapiFields.add("addresses");
    openapiFields.add("tags");
    openapiFields.add("intercom_hash");
    openapiFields.add("first_day_of_week");
    openapiFields.add("am_pm_notation");
    openapiFields.add("auto_find_email_linkedin");
    openapiFields.add("data_sources_to_reconnect");
    openapiFields.add("data_sources");
    openapiFields.add("plan_flags");
    openapiFields.add("flags");
    openapiFields.add("role");
    openapiFields.add("call_log_sync_date");
    openapiFields.add("two_fa_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetMe200Response
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMe200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMe200Response is not found in the empty JSON string", GetMe200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMe200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMe200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `team`
      if (jsonObj.get("team") != null && !jsonObj.get("team").isJsonNull()) {
        GetMe200ResponseTeam.validateJsonElement(jsonObj.get("team"));
      }
      if ((jsonObj.get("notification_channel_id") != null && !jsonObj.get("notification_channel_id").isJsonNull()) && !jsonObj.get("notification_channel_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notification_channel_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notification_channel_id").toString()));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("middle") != null && !jsonObj.get("middle").isJsonNull()) && !jsonObj.get("middle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middle").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      if ((jsonObj.get("picture") != null && !jsonObj.get("picture").isJsonNull()) && !jsonObj.get("picture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picture").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("sync_status") != null && !jsonObj.get("sync_status").isJsonNull()) && !jsonObj.get("sync_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sync_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sync_status").toString()));
      }
      if ((jsonObj.get("calendar_sync_status") != null && !jsonObj.get("calendar_sync_status").isJsonNull()) && !jsonObj.get("calendar_sync_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `calendar_sync_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("calendar_sync_status").toString()));
      }
      if ((jsonObj.get("restricted_reason") != null && !jsonObj.get("restricted_reason").isJsonNull()) && !jsonObj.get("restricted_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `restricted_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("restricted_reason").toString()));
      }
      if ((jsonObj.get("team_discount_code") != null && !jsonObj.get("team_discount_code").isJsonNull()) && !jsonObj.get("team_discount_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `team_discount_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("team_discount_code").toString()));
      }
      if ((jsonObj.get("referral_code") != null && !jsonObj.get("referral_code").isJsonNull()) && !jsonObj.get("referral_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referral_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referral_code").toString()));
      }
      if (jsonObj.get("social_profiles") != null && !jsonObj.get("social_profiles").isJsonNull()) {
        JsonArray jsonArraysocialProfiles = jsonObj.getAsJsonArray("social_profiles");
        if (jsonArraysocialProfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("social_profiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `social_profiles` to be an array in the JSON string but got `%s`", jsonObj.get("social_profiles").toString()));
          }

          // validate the optional field `social_profiles` (array)
          for (int i = 0; i < jsonArraysocialProfiles.size(); i++) {
            GetMe200ResponseSocialProfilesInner.validateJsonElement(jsonArraysocialProfiles.get(i));
          };
        }
      }
      if (jsonObj.get("phone_numbers") != null && !jsonObj.get("phone_numbers").isJsonNull()) {
        JsonArray jsonArrayphoneNumbers = jsonObj.getAsJsonArray("phone_numbers");
        if (jsonArrayphoneNumbers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phone_numbers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phone_numbers` to be an array in the JSON string but got `%s`", jsonObj.get("phone_numbers").toString()));
          }

          // validate the optional field `phone_numbers` (array)
          for (int i = 0; i < jsonArrayphoneNumbers.size(); i++) {
            GetMe200ResponsePhoneNumbersInner.validateJsonElement(jsonArrayphoneNumbers.get(i));
          };
        }
      }
      if (jsonObj.get("positions") != null && !jsonObj.get("positions").isJsonNull()) {
        JsonArray jsonArraypositions = jsonObj.getAsJsonArray("positions");
        if (jsonArraypositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("positions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `positions` to be an array in the JSON string but got `%s`", jsonObj.get("positions").toString()));
          }

          // validate the optional field `positions` (array)
          for (int i = 0; i < jsonArraypositions.size(); i++) {
            GetContacts200ResponseInnerPositionsInner.validateJsonElement(jsonArraypositions.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull() && !jsonObj.get("addresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("intercom_hash") != null && !jsonObj.get("intercom_hash").isJsonNull()) && !jsonObj.get("intercom_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intercom_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intercom_hash").toString()));
      }
      if (jsonObj.get("data_sources_to_reconnect") != null && !jsonObj.get("data_sources_to_reconnect").isJsonNull()) {
        JsonArray jsonArraydataSourcesToReconnect = jsonObj.getAsJsonArray("data_sources_to_reconnect");
        if (jsonArraydataSourcesToReconnect != null) {
          // ensure the json data is an array
          if (!jsonObj.get("data_sources_to_reconnect").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `data_sources_to_reconnect` to be an array in the JSON string but got `%s`", jsonObj.get("data_sources_to_reconnect").toString()));
          }

          // validate the optional field `data_sources_to_reconnect` (array)
          for (int i = 0; i < jsonArraydataSourcesToReconnect.size(); i++) {
            GetMe200ResponseDataSourcesToReconnectInner.validateJsonElement(jsonArraydataSourcesToReconnect.get(i));
          };
        }
      }
      if (jsonObj.get("data_sources") != null && !jsonObj.get("data_sources").isJsonNull()) {
        JsonArray jsonArraydataSources = jsonObj.getAsJsonArray("data_sources");
        if (jsonArraydataSources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("data_sources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `data_sources` to be an array in the JSON string but got `%s`", jsonObj.get("data_sources").toString()));
          }

          // validate the optional field `data_sources` (array)
          for (int i = 0; i < jsonArraydataSources.size(); i++) {
            GetMe200ResponseDataSourcesInner.validateJsonElement(jsonArraydataSources.get(i));
          };
        }
      }
      if (jsonObj.get("flags") != null && !jsonObj.get("flags").isJsonNull()) {
        JsonArray jsonArrayflags = jsonObj.getAsJsonArray("flags");
        if (jsonArrayflags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("flags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `flags` to be an array in the JSON string but got `%s`", jsonObj.get("flags").toString()));
          }

          // validate the optional field `flags` (array)
          for (int i = 0; i < jsonArrayflags.size(); i++) {
            GetMe200ResponseFlagsInner.validateJsonElement(jsonArrayflags.get(i));
          };
        }
      }
      // validate the optional field `role`
      if (jsonObj.get("role") != null && !jsonObj.get("role").isJsonNull()) {
        GetMe200ResponseRole.validateJsonElement(jsonObj.get("role"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMe200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMe200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMe200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMe200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMe200Response>() {
           @Override
           public void write(JsonWriter out, GetMe200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMe200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetMe200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetMe200Response
  * @throws IOException if the JSON string is invalid with respect to GetMe200Response
  */
  public static GetMe200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMe200Response.class);
  }

 /**
  * Convert an instance of GetMe200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

