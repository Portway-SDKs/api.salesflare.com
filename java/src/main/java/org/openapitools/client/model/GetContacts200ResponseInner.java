/*
 * Salesflare API
 * # Introduction  ## Getting Started  The Salesflare API allows you to access and build your own applications or integrations that interact with Salesflare.  The Salesflare API provides a RESTful interface with JSON-formatted responses to access most Salesflare resources.  ## Authentication  The Salesflare API uses bearer token based authentication, which means you need to use the key-value pair \"Authorization : Bearer APIKEY\" in the header to authenticate.  You can make an API key in [\"Settings\" > \"API keys\"](https://app.salesflare.com/#/settings/apikeys).  Click on the large orange \"+\" button on the bottom right of the screen to create an API key.  ![Screenshot API Key Settings](https://lib.salesflare.com/api_docs/screenshot_settings_apikeys.png)  ## Requests  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure your developer tools support this version of TLS as older versions or SSL are not supported for security reasons.  For PUT or POST requests (e.g. create, update), the payload must be provided as JSON in the request body.  ## Responses  Responses use HTTP status codes, with the most typical ones being:  | Code                   | Meaning               | |------------------------|-----------------------| | Successful Responses                           | | 200                    | OK                    | | Error Responses                                | | 400                    | Bad Request           | | 401                    | Unauthorized          | | 404                    | Not Found             | | 429                    | Too Many Requests     | | 500                    | Internal Server Error |  ## Testing  We recommend testing our API with Postman.  ### Download specification  Our API is documented following the OpenAPI specification. You can download it [here](https://api.salesflare.com/openapi.json)  ### Import in Postman  To import the collection, open Postman and click Import, then select \"Import From Link\"  Copy & Paste the following link and press the \"Import\" button:  > https://api.salesflare.com/openapi.json  ![Screenshot Postman Import](https://lib.salesflare.com/api_docs/screenshot_postman_import.png)  ## Support  For API questions and support, please email support@salesflare.com or click the chat bubble below.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salesflare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetContacts200ResponseInnerAccount;
import org.openapitools.client.model.GetContacts200ResponseInnerAddressesInner;
import org.openapitools.client.model.GetContacts200ResponseInnerOwner;
import org.openapitools.client.model.GetContacts200ResponseInnerPhoneNumbersInner;
import org.openapitools.client.model.GetContacts200ResponseInnerPositionsInner;
import org.openapitools.client.model.GetContacts200ResponseInnerSocialProfilesInner;
import org.openapitools.client.model.GetContacts200ResponseInnerTagsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetContacts200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-24T18:23:43.461571613Z[UTC]", comments = "Generator version: 7.6.0")
public class GetContacts200ResponseInner {
  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private GetContacts200ResponseInnerAccount account;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_MIDDLE = "middle";
  @SerializedName(SERIALIZED_NAME_MIDDLE)
  private String middle;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birth_date";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private String birthDate;

  public static final String SERIALIZED_NAME_OPT_OUT = "opt-out";
  @SerializedName(SERIALIZED_NAME_OPT_OUT)
  private Boolean optOut;

  public static final String SERIALIZED_NAME_OPT_OUT_DATE = "opt-out_date";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_DATE)
  private OffsetDateTime optOutDate;

  public static final String SERIALIZED_NAME_OPT_OUT_CAMPAIGN = "opt-out_campaign";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_CAMPAIGN)
  private String optOutCampaign;

  public static final String SERIALIZED_NAME_BOUNCED = "bounced";
  @SerializedName(SERIALIZED_NAME_BOUNCED)
  private Boolean bounced;

  public static final String SERIALIZED_NAME_BOUNCED_DATE = "bounced_date";
  @SerializedName(SERIALIZED_NAME_BOUNCED_DATE)
  private OffsetDateTime bouncedDate;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<Object> files = new ArrayList<>();

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private GetContacts200ResponseInnerOwner owner;

  public static final String SERIALIZED_NAME_PICTURE = "picture";
  @SerializedName(SERIALIZED_NAME_PICTURE)
  private String picture;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_NOT_VIEWED = "not_viewed";
  @SerializedName(SERIALIZED_NAME_NOT_VIEWED)
  private Boolean notViewed;

  public static final String SERIALIZED_NAME_CAN_EDIT = "can_edit";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT)
  private Boolean canEdit;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_MODIFICATION_DATE = "modification_date";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_DATE)
  private OffsetDateTime modificationDate;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<GetContacts200ResponseInnerTagsInner> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<GetContacts200ResponseInnerAddressesInner> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_MOBILE_PHONE_NUMBER = "mobile_phone_number";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE_NUMBER)
  private String mobilePhoneNumber;

  public static final String SERIALIZED_NAME_HOME_PHONE_NUMBER = "home_phone_number";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_NUMBER)
  private String homePhoneNumber;

  public static final String SERIALIZED_NAME_FAX_NUMBER = "fax_number";
  @SerializedName(SERIALIZED_NAME_FAX_NUMBER)
  private String faxNumber;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phone_numbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<GetContacts200ResponseInnerPhoneNumbersInner> phoneNumbers = new ArrayList<>();

  public static final String SERIALIZED_NAME_POSITIONS = "positions";
  @SerializedName(SERIALIZED_NAME_POSITIONS)
  private List<GetContacts200ResponseInnerPositionsInner> positions = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOCIAL_PROFILES = "social_profiles";
  @SerializedName(SERIALIZED_NAME_SOCIAL_PROFILES)
  private List<GetContacts200ResponseInnerSocialProfilesInner> socialProfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORGANISATION = "organisation";
  @SerializedName(SERIALIZED_NAME_ORGANISATION)
  private String organisation;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private String role;

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private Object custom;

  public static final String SERIALIZED_NAME_LAST_EMAIL_DATE = "last_email_date";
  @SerializedName(SERIALIZED_NAME_LAST_EMAIL_DATE)
  private OffsetDateTime lastEmailDate;

  public static final String SERIALIZED_NAME_LAST_MEETING_DATE = "last_meeting_date";
  @SerializedName(SERIALIZED_NAME_LAST_MEETING_DATE)
  private OffsetDateTime lastMeetingDate;

  public GetContacts200ResponseInner() {
  }

  public GetContacts200ResponseInner account(GetContacts200ResponseInnerAccount account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  public GetContacts200ResponseInnerAccount getAccount() {
    return account;
  }

  public void setAccount(GetContacts200ResponseInnerAccount account) {
    this.account = account;
  }


  public GetContacts200ResponseInner id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  public GetContacts200ResponseInner prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public GetContacts200ResponseInner firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public GetContacts200ResponseInner middle(String middle) {
    this.middle = middle;
    return this;
  }

   /**
   * Get middle
   * @return middle
  **/
  @javax.annotation.Nullable
  public String getMiddle() {
    return middle;
  }

  public void setMiddle(String middle) {
    this.middle = middle;
  }


  public GetContacts200ResponseInner lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public GetContacts200ResponseInner suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

   /**
   * Get suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public GetContacts200ResponseInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetContacts200ResponseInner email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public GetContacts200ResponseInner domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public GetContacts200ResponseInner birthDate(String birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/
  @javax.annotation.Nullable
  public String getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(String birthDate) {
    this.birthDate = birthDate;
  }


  public GetContacts200ResponseInner optOut(Boolean optOut) {
    this.optOut = optOut;
    return this;
  }

   /**
   * Get optOut
   * @return optOut
  **/
  @javax.annotation.Nullable
  public Boolean getOptOut() {
    return optOut;
  }

  public void setOptOut(Boolean optOut) {
    this.optOut = optOut;
  }


  public GetContacts200ResponseInner optOutDate(OffsetDateTime optOutDate) {
    this.optOutDate = optOutDate;
    return this;
  }

   /**
   * Get optOutDate
   * @return optOutDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getOptOutDate() {
    return optOutDate;
  }

  public void setOptOutDate(OffsetDateTime optOutDate) {
    this.optOutDate = optOutDate;
  }


  public GetContacts200ResponseInner optOutCampaign(String optOutCampaign) {
    this.optOutCampaign = optOutCampaign;
    return this;
  }

   /**
   * Get optOutCampaign
   * @return optOutCampaign
  **/
  @javax.annotation.Nullable
  public String getOptOutCampaign() {
    return optOutCampaign;
  }

  public void setOptOutCampaign(String optOutCampaign) {
    this.optOutCampaign = optOutCampaign;
  }


  public GetContacts200ResponseInner bounced(Boolean bounced) {
    this.bounced = bounced;
    return this;
  }

   /**
   * Get bounced
   * @return bounced
  **/
  @javax.annotation.Nullable
  public Boolean getBounced() {
    return bounced;
  }

  public void setBounced(Boolean bounced) {
    this.bounced = bounced;
  }


  public GetContacts200ResponseInner bouncedDate(OffsetDateTime bouncedDate) {
    this.bouncedDate = bouncedDate;
    return this;
  }

   /**
   * Get bouncedDate
   * @return bouncedDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getBouncedDate() {
    return bouncedDate;
  }

  public void setBouncedDate(OffsetDateTime bouncedDate) {
    this.bouncedDate = bouncedDate;
  }


  public GetContacts200ResponseInner files(List<Object> files) {
    this.files = files;
    return this;
  }

  public GetContacts200ResponseInner addFilesItem(Object filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @javax.annotation.Nullable
  public List<Object> getFiles() {
    return files;
  }

  public void setFiles(List<Object> files) {
    this.files = files;
  }


  public GetContacts200ResponseInner owner(GetContacts200ResponseInnerOwner owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  public GetContacts200ResponseInnerOwner getOwner() {
    return owner;
  }

  public void setOwner(GetContacts200ResponseInnerOwner owner) {
    this.owner = owner;
  }


  public GetContacts200ResponseInner picture(String picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Get picture
   * @return picture
  **/
  @javax.annotation.Nullable
  public String getPicture() {
    return picture;
  }

  public void setPicture(String picture) {
    this.picture = picture;
  }


  public GetContacts200ResponseInner archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nullable
  public Boolean getArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public GetContacts200ResponseInner notViewed(Boolean notViewed) {
    this.notViewed = notViewed;
    return this;
  }

   /**
   * Get notViewed
   * @return notViewed
  **/
  @javax.annotation.Nullable
  public Boolean getNotViewed() {
    return notViewed;
  }

  public void setNotViewed(Boolean notViewed) {
    this.notViewed = notViewed;
  }


  public GetContacts200ResponseInner canEdit(Boolean canEdit) {
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @javax.annotation.Nullable
  public Boolean getCanEdit() {
    return canEdit;
  }

  public void setCanEdit(Boolean canEdit) {
    this.canEdit = canEdit;
  }


  public GetContacts200ResponseInner creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public GetContacts200ResponseInner modificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }


  public GetContacts200ResponseInner type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public GetContacts200ResponseInner tags(List<GetContacts200ResponseInnerTagsInner> tags) {
    this.tags = tags;
    return this;
  }

  public GetContacts200ResponseInner addTagsItem(GetContacts200ResponseInnerTagsInner tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<GetContacts200ResponseInnerTagsInner> getTags() {
    return tags;
  }

  public void setTags(List<GetContacts200ResponseInnerTagsInner> tags) {
    this.tags = tags;
  }


  public GetContacts200ResponseInner addresses(List<GetContacts200ResponseInnerAddressesInner> addresses) {
    this.addresses = addresses;
    return this;
  }

  public GetContacts200ResponseInner addAddressesItem(GetContacts200ResponseInnerAddressesInner addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  public List<GetContacts200ResponseInnerAddressesInner> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<GetContacts200ResponseInnerAddressesInner> addresses) {
    this.addresses = addresses;
  }


  public GetContacts200ResponseInner phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public GetContacts200ResponseInner mobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
    return this;
  }

   /**
   * Get mobilePhoneNumber
   * @return mobilePhoneNumber
  **/
  @javax.annotation.Nullable
  public String getMobilePhoneNumber() {
    return mobilePhoneNumber;
  }

  public void setMobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
  }


  public GetContacts200ResponseInner homePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
    return this;
  }

   /**
   * Get homePhoneNumber
   * @return homePhoneNumber
  **/
  @javax.annotation.Nullable
  public String getHomePhoneNumber() {
    return homePhoneNumber;
  }

  public void setHomePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
  }


  public GetContacts200ResponseInner faxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
    return this;
  }

   /**
   * Get faxNumber
   * @return faxNumber
  **/
  @javax.annotation.Nullable
  public String getFaxNumber() {
    return faxNumber;
  }

  public void setFaxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
  }


  public GetContacts200ResponseInner phoneNumbers(List<GetContacts200ResponseInnerPhoneNumbersInner> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public GetContacts200ResponseInner addPhoneNumbersItem(GetContacts200ResponseInnerPhoneNumbersInner phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  public List<GetContacts200ResponseInnerPhoneNumbersInner> getPhoneNumbers() {
    return phoneNumbers;
  }

  public void setPhoneNumbers(List<GetContacts200ResponseInnerPhoneNumbersInner> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public GetContacts200ResponseInner positions(List<GetContacts200ResponseInnerPositionsInner> positions) {
    this.positions = positions;
    return this;
  }

  public GetContacts200ResponseInner addPositionsItem(GetContacts200ResponseInnerPositionsInner positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

   /**
   * Get positions
   * @return positions
  **/
  @javax.annotation.Nullable
  public List<GetContacts200ResponseInnerPositionsInner> getPositions() {
    return positions;
  }

  public void setPositions(List<GetContacts200ResponseInnerPositionsInner> positions) {
    this.positions = positions;
  }


  public GetContacts200ResponseInner socialProfiles(List<GetContacts200ResponseInnerSocialProfilesInner> socialProfiles) {
    this.socialProfiles = socialProfiles;
    return this;
  }

  public GetContacts200ResponseInner addSocialProfilesItem(GetContacts200ResponseInnerSocialProfilesInner socialProfilesItem) {
    if (this.socialProfiles == null) {
      this.socialProfiles = new ArrayList<>();
    }
    this.socialProfiles.add(socialProfilesItem);
    return this;
  }

   /**
   * Get socialProfiles
   * @return socialProfiles
  **/
  @javax.annotation.Nullable
  public List<GetContacts200ResponseInnerSocialProfilesInner> getSocialProfiles() {
    return socialProfiles;
  }

  public void setSocialProfiles(List<GetContacts200ResponseInnerSocialProfilesInner> socialProfiles) {
    this.socialProfiles = socialProfiles;
  }


  public GetContacts200ResponseInner organisation(String organisation) {
    this.organisation = organisation;
    return this;
  }

   /**
   * Get organisation
   * @return organisation
  **/
  @javax.annotation.Nullable
  public String getOrganisation() {
    return organisation;
  }

  public void setOrganisation(String organisation) {
    this.organisation = organisation;
  }


  public GetContacts200ResponseInner role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }


  public GetContacts200ResponseInner custom(Object custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @javax.annotation.Nullable
  public Object getCustom() {
    return custom;
  }

  public void setCustom(Object custom) {
    this.custom = custom;
  }


  public GetContacts200ResponseInner lastEmailDate(OffsetDateTime lastEmailDate) {
    this.lastEmailDate = lastEmailDate;
    return this;
  }

   /**
   * Get lastEmailDate
   * @return lastEmailDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getLastEmailDate() {
    return lastEmailDate;
  }

  public void setLastEmailDate(OffsetDateTime lastEmailDate) {
    this.lastEmailDate = lastEmailDate;
  }


  public GetContacts200ResponseInner lastMeetingDate(OffsetDateTime lastMeetingDate) {
    this.lastMeetingDate = lastMeetingDate;
    return this;
  }

   /**
   * Get lastMeetingDate
   * @return lastMeetingDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getLastMeetingDate() {
    return lastMeetingDate;
  }

  public void setLastMeetingDate(OffsetDateTime lastMeetingDate) {
    this.lastMeetingDate = lastMeetingDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetContacts200ResponseInner getContacts200ResponseInner = (GetContacts200ResponseInner) o;
    return Objects.equals(this.account, getContacts200ResponseInner.account) &&
        Objects.equals(this.id, getContacts200ResponseInner.id) &&
        Objects.equals(this.prefix, getContacts200ResponseInner.prefix) &&
        Objects.equals(this.firstname, getContacts200ResponseInner.firstname) &&
        Objects.equals(this.middle, getContacts200ResponseInner.middle) &&
        Objects.equals(this.lastname, getContacts200ResponseInner.lastname) &&
        Objects.equals(this.suffix, getContacts200ResponseInner.suffix) &&
        Objects.equals(this.name, getContacts200ResponseInner.name) &&
        Objects.equals(this.email, getContacts200ResponseInner.email) &&
        Objects.equals(this.domain, getContacts200ResponseInner.domain) &&
        Objects.equals(this.birthDate, getContacts200ResponseInner.birthDate) &&
        Objects.equals(this.optOut, getContacts200ResponseInner.optOut) &&
        Objects.equals(this.optOutDate, getContacts200ResponseInner.optOutDate) &&
        Objects.equals(this.optOutCampaign, getContacts200ResponseInner.optOutCampaign) &&
        Objects.equals(this.bounced, getContacts200ResponseInner.bounced) &&
        Objects.equals(this.bouncedDate, getContacts200ResponseInner.bouncedDate) &&
        Objects.equals(this.files, getContacts200ResponseInner.files) &&
        Objects.equals(this.owner, getContacts200ResponseInner.owner) &&
        Objects.equals(this.picture, getContacts200ResponseInner.picture) &&
        Objects.equals(this.archived, getContacts200ResponseInner.archived) &&
        Objects.equals(this.notViewed, getContacts200ResponseInner.notViewed) &&
        Objects.equals(this.canEdit, getContacts200ResponseInner.canEdit) &&
        Objects.equals(this.creationDate, getContacts200ResponseInner.creationDate) &&
        Objects.equals(this.modificationDate, getContacts200ResponseInner.modificationDate) &&
        Objects.equals(this.type, getContacts200ResponseInner.type) &&
        Objects.equals(this.tags, getContacts200ResponseInner.tags) &&
        Objects.equals(this.addresses, getContacts200ResponseInner.addresses) &&
        Objects.equals(this.phoneNumber, getContacts200ResponseInner.phoneNumber) &&
        Objects.equals(this.mobilePhoneNumber, getContacts200ResponseInner.mobilePhoneNumber) &&
        Objects.equals(this.homePhoneNumber, getContacts200ResponseInner.homePhoneNumber) &&
        Objects.equals(this.faxNumber, getContacts200ResponseInner.faxNumber) &&
        Objects.equals(this.phoneNumbers, getContacts200ResponseInner.phoneNumbers) &&
        Objects.equals(this.positions, getContacts200ResponseInner.positions) &&
        Objects.equals(this.socialProfiles, getContacts200ResponseInner.socialProfiles) &&
        Objects.equals(this.organisation, getContacts200ResponseInner.organisation) &&
        Objects.equals(this.role, getContacts200ResponseInner.role) &&
        Objects.equals(this.custom, getContacts200ResponseInner.custom) &&
        Objects.equals(this.lastEmailDate, getContacts200ResponseInner.lastEmailDate) &&
        Objects.equals(this.lastMeetingDate, getContacts200ResponseInner.lastMeetingDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, id, prefix, firstname, middle, lastname, suffix, name, email, domain, birthDate, optOut, optOutDate, optOutCampaign, bounced, bouncedDate, files, owner, picture, archived, notViewed, canEdit, creationDate, modificationDate, type, tags, addresses, phoneNumber, mobilePhoneNumber, homePhoneNumber, faxNumber, phoneNumbers, positions, socialProfiles, organisation, role, custom, lastEmailDate, lastMeetingDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetContacts200ResponseInner {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    middle: ").append(toIndentedString(middle)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    optOut: ").append(toIndentedString(optOut)).append("\n");
    sb.append("    optOutDate: ").append(toIndentedString(optOutDate)).append("\n");
    sb.append("    optOutCampaign: ").append(toIndentedString(optOutCampaign)).append("\n");
    sb.append("    bounced: ").append(toIndentedString(bounced)).append("\n");
    sb.append("    bouncedDate: ").append(toIndentedString(bouncedDate)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    notViewed: ").append(toIndentedString(notViewed)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    mobilePhoneNumber: ").append(toIndentedString(mobilePhoneNumber)).append("\n");
    sb.append("    homePhoneNumber: ").append(toIndentedString(homePhoneNumber)).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    socialProfiles: ").append(toIndentedString(socialProfiles)).append("\n");
    sb.append("    organisation: ").append(toIndentedString(organisation)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    lastEmailDate: ").append(toIndentedString(lastEmailDate)).append("\n");
    sb.append("    lastMeetingDate: ").append(toIndentedString(lastMeetingDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account");
    openapiFields.add("id");
    openapiFields.add("prefix");
    openapiFields.add("firstname");
    openapiFields.add("middle");
    openapiFields.add("lastname");
    openapiFields.add("suffix");
    openapiFields.add("name");
    openapiFields.add("email");
    openapiFields.add("domain");
    openapiFields.add("birth_date");
    openapiFields.add("opt-out");
    openapiFields.add("opt-out_date");
    openapiFields.add("opt-out_campaign");
    openapiFields.add("bounced");
    openapiFields.add("bounced_date");
    openapiFields.add("files");
    openapiFields.add("owner");
    openapiFields.add("picture");
    openapiFields.add("archived");
    openapiFields.add("not_viewed");
    openapiFields.add("can_edit");
    openapiFields.add("creation_date");
    openapiFields.add("modification_date");
    openapiFields.add("type");
    openapiFields.add("tags");
    openapiFields.add("addresses");
    openapiFields.add("phone_number");
    openapiFields.add("mobile_phone_number");
    openapiFields.add("home_phone_number");
    openapiFields.add("fax_number");
    openapiFields.add("phone_numbers");
    openapiFields.add("positions");
    openapiFields.add("social_profiles");
    openapiFields.add("organisation");
    openapiFields.add("role");
    openapiFields.add("custom");
    openapiFields.add("last_email_date");
    openapiFields.add("last_meeting_date");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetContacts200ResponseInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetContacts200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetContacts200ResponseInner is not found in the empty JSON string", GetContacts200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetContacts200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetContacts200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetContacts200ResponseInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `account`
      if (jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) {
        GetContacts200ResponseInnerAccount.validateJsonElement(jsonObj.get("account"));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("middle") != null && !jsonObj.get("middle").isJsonNull()) && !jsonObj.get("middle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middle").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      if ((jsonObj.get("birth_date") != null && !jsonObj.get("birth_date").isJsonNull()) && !jsonObj.get("birth_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birth_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birth_date").toString()));
      }
      if ((jsonObj.get("opt-out_campaign") != null && !jsonObj.get("opt-out_campaign").isJsonNull()) && !jsonObj.get("opt-out_campaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt-out_campaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opt-out_campaign").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("files") != null && !jsonObj.get("files").isJsonNull() && !jsonObj.get("files").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `files` to be an array in the JSON string but got `%s`", jsonObj.get("files").toString()));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        GetContacts200ResponseInnerOwner.validateJsonElement(jsonObj.get("owner"));
      }
      if ((jsonObj.get("picture") != null && !jsonObj.get("picture").isJsonNull()) && !jsonObj.get("picture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picture").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
          }

          // validate the optional field `tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            GetContacts200ResponseInnerTagsInner.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            GetContacts200ResponseInnerAddressesInner.validateJsonElement(jsonArrayaddresses.get(i));
          };
        }
      }
      if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
      }
      if ((jsonObj.get("mobile_phone_number") != null && !jsonObj.get("mobile_phone_number").isJsonNull()) && !jsonObj.get("mobile_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile_phone_number").toString()));
      }
      if ((jsonObj.get("home_phone_number") != null && !jsonObj.get("home_phone_number").isJsonNull()) && !jsonObj.get("home_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `home_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("home_phone_number").toString()));
      }
      if ((jsonObj.get("fax_number") != null && !jsonObj.get("fax_number").isJsonNull()) && !jsonObj.get("fax_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax_number").toString()));
      }
      if (jsonObj.get("phone_numbers") != null && !jsonObj.get("phone_numbers").isJsonNull()) {
        JsonArray jsonArrayphoneNumbers = jsonObj.getAsJsonArray("phone_numbers");
        if (jsonArrayphoneNumbers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phone_numbers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phone_numbers` to be an array in the JSON string but got `%s`", jsonObj.get("phone_numbers").toString()));
          }

          // validate the optional field `phone_numbers` (array)
          for (int i = 0; i < jsonArrayphoneNumbers.size(); i++) {
            GetContacts200ResponseInnerPhoneNumbersInner.validateJsonElement(jsonArrayphoneNumbers.get(i));
          };
        }
      }
      if (jsonObj.get("positions") != null && !jsonObj.get("positions").isJsonNull()) {
        JsonArray jsonArraypositions = jsonObj.getAsJsonArray("positions");
        if (jsonArraypositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("positions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `positions` to be an array in the JSON string but got `%s`", jsonObj.get("positions").toString()));
          }

          // validate the optional field `positions` (array)
          for (int i = 0; i < jsonArraypositions.size(); i++) {
            GetContacts200ResponseInnerPositionsInner.validateJsonElement(jsonArraypositions.get(i));
          };
        }
      }
      if (jsonObj.get("social_profiles") != null && !jsonObj.get("social_profiles").isJsonNull()) {
        JsonArray jsonArraysocialProfiles = jsonObj.getAsJsonArray("social_profiles");
        if (jsonArraysocialProfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("social_profiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `social_profiles` to be an array in the JSON string but got `%s`", jsonObj.get("social_profiles").toString()));
          }

          // validate the optional field `social_profiles` (array)
          for (int i = 0; i < jsonArraysocialProfiles.size(); i++) {
            GetContacts200ResponseInnerSocialProfilesInner.validateJsonElement(jsonArraysocialProfiles.get(i));
          };
        }
      }
      if ((jsonObj.get("organisation") != null && !jsonObj.get("organisation").isJsonNull()) && !jsonObj.get("organisation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisation").toString()));
      }
      if ((jsonObj.get("role") != null && !jsonObj.get("role").isJsonNull()) && !jsonObj.get("role").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetContacts200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetContacts200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetContacts200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetContacts200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetContacts200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetContacts200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetContacts200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetContacts200ResponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetContacts200ResponseInner
  * @throws IOException if the JSON string is invalid with respect to GetContacts200ResponseInner
  */
  public static GetContacts200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetContacts200ResponseInner.class);
  }

 /**
  * Convert an instance of GetContacts200ResponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

