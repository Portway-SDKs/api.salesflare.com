/*
 * Salesflare API
 * # Introduction  ## Getting Started  The Salesflare API allows you to access and build your own applications or integrations that interact with Salesflare.  The Salesflare API provides a RESTful interface with JSON-formatted responses to access most Salesflare resources.  ## Authentication  The Salesflare API uses bearer token based authentication, which means you need to use the key-value pair \"Authorization : Bearer APIKEY\" in the header to authenticate.  You can make an API key in [\"Settings\" > \"API keys\"](https://app.salesflare.com/#/settings/apikeys).  Click on the large orange \"+\" button on the bottom right of the screen to create an API key.  ![Screenshot API Key Settings](https://lib.salesflare.com/api_docs/screenshot_settings_apikeys.png)  ## Requests  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure your developer tools support this version of TLS as older versions or SSL are not supported for security reasons.  For PUT or POST requests (e.g. create, update), the payload must be provided as JSON in the request body.  ## Responses  Responses use HTTP status codes, with the most typical ones being:  | Code                   | Meaning               | |------------------------|-----------------------| | Successful Responses                           | | 200                    | OK                    | | Error Responses                                | | 400                    | Bad Request           | | 401                    | Unauthorized          | | 404                    | Not Found             | | 429                    | Too Many Requests     | | 500                    | Internal Server Error |  ## Testing  We recommend testing our API with Postman.  ### Download specification  Our API is documented following the OpenAPI specification. You can download it [here](https://api.salesflare.com/openapi.json)  ### Import in Postman  To import the collection, open Postman and click Import, then select \"Import From Link\"  Copy & Paste the following link and press the \"Import\" button:  > https://api.salesflare.com/openapi.json  ![Screenshot Postman Import](https://lib.salesflare.com/api_docs/screenshot_postman_import.png)  ## Support  For API questions and support, please email support@salesflare.com or click the chat bubble below.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salesflare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GetMe200ResponseTeamCurrency;
import org.openapitools.client.model.GetMe200ResponseTeamEmailTrackingDomain;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMe200ResponseTeam
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-24T18:23:43.461571613Z[UTC]", comments = "Generator version: 7.6.0")
public class GetMe200ResponseTeam {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TRACKING_TOKEN = "tracking_token";
  @SerializedName(SERIALIZED_NAME_TRACKING_TOKEN)
  private String trackingToken;

  public static final String SERIALIZED_NAME_DAYS_UNTIL_ACCOUNT_INACTIVE = "days_until_account_inactive";
  @SerializedName(SERIALIZED_NAME_DAYS_UNTIL_ACCOUNT_INACTIVE)
  private BigDecimal daysUntilAccountInactive;

  public static final String SERIALIZED_NAME_TOTAL_USER_COUNT = "total_user_count";
  @SerializedName(SERIALIZED_NAME_TOTAL_USER_COUNT)
  private BigDecimal totalUserCount;

  public static final String SERIALIZED_NAME_ENABLED_USER_COUNT = "enabled_user_count";
  @SerializedName(SERIALIZED_NAME_ENABLED_USER_COUNT)
  private BigDecimal enabledUserCount;

  public static final String SERIALIZED_NAME_PAID_USER_COUNT = "paid_user_count";
  @SerializedName(SERIALIZED_NAME_PAID_USER_COUNT)
  private BigDecimal paidUserCount;

  public static final String SERIALIZED_NAME_FREE_USERS = "free_users";
  @SerializedName(SERIALIZED_NAME_FREE_USERS)
  private BigDecimal freeUsers;

  public static final String SERIALIZED_NAME_SUBSCRIBED = "subscribed";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBED)
  private Boolean subscribed;

  /**
   * Gets or Sets paymentType
   */
  @JsonAdapter(PaymentTypeEnum.Adapter.class)
  public enum PaymentTypeEnum {
    STRIPE("stripe"),
    
    FREE("free"),
    
    APPSTACK("appstack");

    private String value;

    PaymentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentTypeEnum fromValue(String value) {
      for (PaymentTypeEnum b : PaymentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PaymentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PaymentTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PaymentTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PAYMENT_TYPE = "payment_type";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TYPE)
  private PaymentTypeEnum paymentType;

  public static final String SERIALIZED_NAME_DISCOUNT_CODE = "discount_code";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_CODE)
  private String discountCode;

  public static final String SERIALIZED_NAME_DISCOUNT_TYPE = "discount_type";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TYPE)
  private String discountType;

  public static final String SERIALIZED_NAME_PROMO_DESCRIPTION = "promo_description";
  @SerializedName(SERIALIZED_NAME_PROMO_DESCRIPTION)
  private String promoDescription;

  public static final String SERIALIZED_NAME_PROMO_REDEEM_BY = "promo_redeem_by";
  @SerializedName(SERIALIZED_NAME_PROMO_REDEEM_BY)
  private OffsetDateTime promoRedeemBy;

  public static final String SERIALIZED_NAME_PROMO_CODE = "promo_code";
  @SerializedName(SERIALIZED_NAME_PROMO_CODE)
  private String promoCode;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private BigDecimal plan;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private GetMe200ResponseTeamCurrency currency;

  public static final String SERIALIZED_NAME_BILLING_CURRENCY = "billing_currency";
  @SerializedName(SERIALIZED_NAME_BILLING_CURRENCY)
  private GetMe200ResponseTeamCurrency billingCurrency;

  /**
   * Gets or Sets billingFrequency
   */
  @JsonAdapter(BillingFrequencyEnum.Adapter.class)
  public enum BillingFrequencyEnum {
    MONTHLY("monthly"),
    
    ANNUALLY("annually");

    private String value;

    BillingFrequencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BillingFrequencyEnum fromValue(String value) {
      for (BillingFrequencyEnum b : BillingFrequencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BillingFrequencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BillingFrequencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BillingFrequencyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BillingFrequencyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BillingFrequencyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BILLING_FREQUENCY = "billing_frequency";
  @SerializedName(SERIALIZED_NAME_BILLING_FREQUENCY)
  private BillingFrequencyEnum billingFrequency;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_TIME_ZONE = "time_zone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_STRIPE_CUSTOMER_ID = "stripe_customer_id";
  @SerializedName(SERIALIZED_NAME_STRIPE_CUSTOMER_ID)
  private String stripeCustomerId;

  public static final String SERIALIZED_NAME_CAMPAIGN = "campaign";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN)
  private String campaign;

  public static final String SERIALIZED_NAME_IS_REFERRED = "is_referred";
  @SerializedName(SERIALIZED_NAME_IS_REFERRED)
  private Boolean isReferred;

  public static final String SERIALIZED_NAME_CREDIT_USAGE = "credit_usage";
  @SerializedName(SERIALIZED_NAME_CREDIT_USAGE)
  private BigDecimal creditUsage;

  public static final String SERIALIZED_NAME_CREDIT_QUOTA = "credit_quota";
  @SerializedName(SERIALIZED_NAME_CREDIT_QUOTA)
  private BigDecimal creditQuota;

  /**
   * Gets or Sets creditPackage
   */
  @JsonAdapter(CreditPackageEnum.Adapter.class)
  public enum CreditPackageEnum {
    S("S"),
    
    M("M"),
    
    L("L"),
    
    XL("XL");

    private String value;

    CreditPackageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CreditPackageEnum fromValue(String value) {
      for (CreditPackageEnum b : CreditPackageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CreditPackageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CreditPackageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CreditPackageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CreditPackageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CreditPackageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CREDIT_PACKAGE = "credit_package";
  @SerializedName(SERIALIZED_NAME_CREDIT_PACKAGE)
  private CreditPackageEnum creditPackage;

  public static final String SERIALIZED_NAME_EMAIL_TRACKING_SUBDOMAIN = "email_tracking_subdomain";
  @SerializedName(SERIALIZED_NAME_EMAIL_TRACKING_SUBDOMAIN)
  private String emailTrackingSubdomain;

  public static final String SERIALIZED_NAME_EMAIL_TRACKING_DOMAIN = "email_tracking_domain";
  @SerializedName(SERIALIZED_NAME_EMAIL_TRACKING_DOMAIN)
  private GetMe200ResponseTeamEmailTrackingDomain emailTrackingDomain;

  public static final String SERIALIZED_NAME_AUTOMATED_TAGGING = "automated_tagging";
  @SerializedName(SERIALIZED_NAME_AUTOMATED_TAGGING)
  private Boolean automatedTagging;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public GetMe200ResponseTeam() {
  }

  public GetMe200ResponseTeam id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  public GetMe200ResponseTeam name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetMe200ResponseTeam trackingToken(String trackingToken) {
    this.trackingToken = trackingToken;
    return this;
  }

   /**
   * Get trackingToken
   * @return trackingToken
  **/
  @javax.annotation.Nullable
  public String getTrackingToken() {
    return trackingToken;
  }

  public void setTrackingToken(String trackingToken) {
    this.trackingToken = trackingToken;
  }


  public GetMe200ResponseTeam daysUntilAccountInactive(BigDecimal daysUntilAccountInactive) {
    this.daysUntilAccountInactive = daysUntilAccountInactive;
    return this;
  }

   /**
   * Get daysUntilAccountInactive
   * @return daysUntilAccountInactive
  **/
  @javax.annotation.Nullable
  public BigDecimal getDaysUntilAccountInactive() {
    return daysUntilAccountInactive;
  }

  public void setDaysUntilAccountInactive(BigDecimal daysUntilAccountInactive) {
    this.daysUntilAccountInactive = daysUntilAccountInactive;
  }


  public GetMe200ResponseTeam totalUserCount(BigDecimal totalUserCount) {
    this.totalUserCount = totalUserCount;
    return this;
  }

   /**
   * Get totalUserCount
   * @return totalUserCount
  **/
  @javax.annotation.Nullable
  public BigDecimal getTotalUserCount() {
    return totalUserCount;
  }

  public void setTotalUserCount(BigDecimal totalUserCount) {
    this.totalUserCount = totalUserCount;
  }


  public GetMe200ResponseTeam enabledUserCount(BigDecimal enabledUserCount) {
    this.enabledUserCount = enabledUserCount;
    return this;
  }

   /**
   * Get enabledUserCount
   * @return enabledUserCount
  **/
  @javax.annotation.Nullable
  public BigDecimal getEnabledUserCount() {
    return enabledUserCount;
  }

  public void setEnabledUserCount(BigDecimal enabledUserCount) {
    this.enabledUserCount = enabledUserCount;
  }


  public GetMe200ResponseTeam paidUserCount(BigDecimal paidUserCount) {
    this.paidUserCount = paidUserCount;
    return this;
  }

   /**
   * Get paidUserCount
   * @return paidUserCount
  **/
  @javax.annotation.Nullable
  public BigDecimal getPaidUserCount() {
    return paidUserCount;
  }

  public void setPaidUserCount(BigDecimal paidUserCount) {
    this.paidUserCount = paidUserCount;
  }


  public GetMe200ResponseTeam freeUsers(BigDecimal freeUsers) {
    this.freeUsers = freeUsers;
    return this;
  }

   /**
   * Get freeUsers
   * @return freeUsers
  **/
  @javax.annotation.Nullable
  public BigDecimal getFreeUsers() {
    return freeUsers;
  }

  public void setFreeUsers(BigDecimal freeUsers) {
    this.freeUsers = freeUsers;
  }


  public GetMe200ResponseTeam subscribed(Boolean subscribed) {
    this.subscribed = subscribed;
    return this;
  }

   /**
   * Get subscribed
   * @return subscribed
  **/
  @javax.annotation.Nullable
  public Boolean getSubscribed() {
    return subscribed;
  }

  public void setSubscribed(Boolean subscribed) {
    this.subscribed = subscribed;
  }


  public GetMe200ResponseTeam paymentType(PaymentTypeEnum paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Get paymentType
   * @return paymentType
  **/
  @javax.annotation.Nullable
  public PaymentTypeEnum getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(PaymentTypeEnum paymentType) {
    this.paymentType = paymentType;
  }


  public GetMe200ResponseTeam discountCode(String discountCode) {
    this.discountCode = discountCode;
    return this;
  }

   /**
   * Get discountCode
   * @return discountCode
  **/
  @javax.annotation.Nullable
  public String getDiscountCode() {
    return discountCode;
  }

  public void setDiscountCode(String discountCode) {
    this.discountCode = discountCode;
  }


  public GetMe200ResponseTeam discountType(String discountType) {
    this.discountType = discountType;
    return this;
  }

   /**
   * Get discountType
   * @return discountType
  **/
  @javax.annotation.Nullable
  public String getDiscountType() {
    return discountType;
  }

  public void setDiscountType(String discountType) {
    this.discountType = discountType;
  }


  public GetMe200ResponseTeam promoDescription(String promoDescription) {
    this.promoDescription = promoDescription;
    return this;
  }

   /**
   * Get promoDescription
   * @return promoDescription
  **/
  @javax.annotation.Nullable
  public String getPromoDescription() {
    return promoDescription;
  }

  public void setPromoDescription(String promoDescription) {
    this.promoDescription = promoDescription;
  }


  public GetMe200ResponseTeam promoRedeemBy(OffsetDateTime promoRedeemBy) {
    this.promoRedeemBy = promoRedeemBy;
    return this;
  }

   /**
   * Get promoRedeemBy
   * @return promoRedeemBy
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getPromoRedeemBy() {
    return promoRedeemBy;
  }

  public void setPromoRedeemBy(OffsetDateTime promoRedeemBy) {
    this.promoRedeemBy = promoRedeemBy;
  }


  public GetMe200ResponseTeam promoCode(String promoCode) {
    this.promoCode = promoCode;
    return this;
  }

   /**
   * Get promoCode
   * @return promoCode
  **/
  @javax.annotation.Nullable
  public String getPromoCode() {
    return promoCode;
  }

  public void setPromoCode(String promoCode) {
    this.promoCode = promoCode;
  }


  public GetMe200ResponseTeam plan(BigDecimal plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @javax.annotation.Nullable
  public BigDecimal getPlan() {
    return plan;
  }

  public void setPlan(BigDecimal plan) {
    this.plan = plan;
  }


  public GetMe200ResponseTeam currency(GetMe200ResponseTeamCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  public GetMe200ResponseTeamCurrency getCurrency() {
    return currency;
  }

  public void setCurrency(GetMe200ResponseTeamCurrency currency) {
    this.currency = currency;
  }


  public GetMe200ResponseTeam billingCurrency(GetMe200ResponseTeamCurrency billingCurrency) {
    this.billingCurrency = billingCurrency;
    return this;
  }

   /**
   * Get billingCurrency
   * @return billingCurrency
  **/
  @javax.annotation.Nullable
  public GetMe200ResponseTeamCurrency getBillingCurrency() {
    return billingCurrency;
  }

  public void setBillingCurrency(GetMe200ResponseTeamCurrency billingCurrency) {
    this.billingCurrency = billingCurrency;
  }


  public GetMe200ResponseTeam billingFrequency(BillingFrequencyEnum billingFrequency) {
    this.billingFrequency = billingFrequency;
    return this;
  }

   /**
   * Get billingFrequency
   * @return billingFrequency
  **/
  @javax.annotation.Nullable
  public BillingFrequencyEnum getBillingFrequency() {
    return billingFrequency;
  }

  public void setBillingFrequency(BillingFrequencyEnum billingFrequency) {
    this.billingFrequency = billingFrequency;
  }


  public GetMe200ResponseTeam creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public GetMe200ResponseTeam timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  public GetMe200ResponseTeam stripeCustomerId(String stripeCustomerId) {
    this.stripeCustomerId = stripeCustomerId;
    return this;
  }

   /**
   * Get stripeCustomerId
   * @return stripeCustomerId
  **/
  @javax.annotation.Nullable
  public String getStripeCustomerId() {
    return stripeCustomerId;
  }

  public void setStripeCustomerId(String stripeCustomerId) {
    this.stripeCustomerId = stripeCustomerId;
  }


  public GetMe200ResponseTeam campaign(String campaign) {
    this.campaign = campaign;
    return this;
  }

   /**
   * Get campaign
   * @return campaign
  **/
  @javax.annotation.Nullable
  public String getCampaign() {
    return campaign;
  }

  public void setCampaign(String campaign) {
    this.campaign = campaign;
  }


  public GetMe200ResponseTeam isReferred(Boolean isReferred) {
    this.isReferred = isReferred;
    return this;
  }

   /**
   * Get isReferred
   * @return isReferred
  **/
  @javax.annotation.Nullable
  public Boolean getIsReferred() {
    return isReferred;
  }

  public void setIsReferred(Boolean isReferred) {
    this.isReferred = isReferred;
  }


  public GetMe200ResponseTeam creditUsage(BigDecimal creditUsage) {
    this.creditUsage = creditUsage;
    return this;
  }

   /**
   * Get creditUsage
   * @return creditUsage
  **/
  @javax.annotation.Nullable
  public BigDecimal getCreditUsage() {
    return creditUsage;
  }

  public void setCreditUsage(BigDecimal creditUsage) {
    this.creditUsage = creditUsage;
  }


  public GetMe200ResponseTeam creditQuota(BigDecimal creditQuota) {
    this.creditQuota = creditQuota;
    return this;
  }

   /**
   * Get creditQuota
   * @return creditQuota
  **/
  @javax.annotation.Nullable
  public BigDecimal getCreditQuota() {
    return creditQuota;
  }

  public void setCreditQuota(BigDecimal creditQuota) {
    this.creditQuota = creditQuota;
  }


  public GetMe200ResponseTeam creditPackage(CreditPackageEnum creditPackage) {
    this.creditPackage = creditPackage;
    return this;
  }

   /**
   * Get creditPackage
   * @return creditPackage
  **/
  @javax.annotation.Nullable
  public CreditPackageEnum getCreditPackage() {
    return creditPackage;
  }

  public void setCreditPackage(CreditPackageEnum creditPackage) {
    this.creditPackage = creditPackage;
  }


  public GetMe200ResponseTeam emailTrackingSubdomain(String emailTrackingSubdomain) {
    this.emailTrackingSubdomain = emailTrackingSubdomain;
    return this;
  }

   /**
   * Get emailTrackingSubdomain
   * @return emailTrackingSubdomain
  **/
  @javax.annotation.Nullable
  public String getEmailTrackingSubdomain() {
    return emailTrackingSubdomain;
  }

  public void setEmailTrackingSubdomain(String emailTrackingSubdomain) {
    this.emailTrackingSubdomain = emailTrackingSubdomain;
  }


  public GetMe200ResponseTeam emailTrackingDomain(GetMe200ResponseTeamEmailTrackingDomain emailTrackingDomain) {
    this.emailTrackingDomain = emailTrackingDomain;
    return this;
  }

   /**
   * Get emailTrackingDomain
   * @return emailTrackingDomain
  **/
  @javax.annotation.Nullable
  public GetMe200ResponseTeamEmailTrackingDomain getEmailTrackingDomain() {
    return emailTrackingDomain;
  }

  public void setEmailTrackingDomain(GetMe200ResponseTeamEmailTrackingDomain emailTrackingDomain) {
    this.emailTrackingDomain = emailTrackingDomain;
  }


  public GetMe200ResponseTeam automatedTagging(Boolean automatedTagging) {
    this.automatedTagging = automatedTagging;
    return this;
  }

   /**
   * Get automatedTagging
   * @return automatedTagging
  **/
  @javax.annotation.Nullable
  public Boolean getAutomatedTagging() {
    return automatedTagging;
  }

  public void setAutomatedTagging(Boolean automatedTagging) {
    this.automatedTagging = automatedTagging;
  }


  public GetMe200ResponseTeam domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMe200ResponseTeam getMe200ResponseTeam = (GetMe200ResponseTeam) o;
    return Objects.equals(this.id, getMe200ResponseTeam.id) &&
        Objects.equals(this.name, getMe200ResponseTeam.name) &&
        Objects.equals(this.trackingToken, getMe200ResponseTeam.trackingToken) &&
        Objects.equals(this.daysUntilAccountInactive, getMe200ResponseTeam.daysUntilAccountInactive) &&
        Objects.equals(this.totalUserCount, getMe200ResponseTeam.totalUserCount) &&
        Objects.equals(this.enabledUserCount, getMe200ResponseTeam.enabledUserCount) &&
        Objects.equals(this.paidUserCount, getMe200ResponseTeam.paidUserCount) &&
        Objects.equals(this.freeUsers, getMe200ResponseTeam.freeUsers) &&
        Objects.equals(this.subscribed, getMe200ResponseTeam.subscribed) &&
        Objects.equals(this.paymentType, getMe200ResponseTeam.paymentType) &&
        Objects.equals(this.discountCode, getMe200ResponseTeam.discountCode) &&
        Objects.equals(this.discountType, getMe200ResponseTeam.discountType) &&
        Objects.equals(this.promoDescription, getMe200ResponseTeam.promoDescription) &&
        Objects.equals(this.promoRedeemBy, getMe200ResponseTeam.promoRedeemBy) &&
        Objects.equals(this.promoCode, getMe200ResponseTeam.promoCode) &&
        Objects.equals(this.plan, getMe200ResponseTeam.plan) &&
        Objects.equals(this.currency, getMe200ResponseTeam.currency) &&
        Objects.equals(this.billingCurrency, getMe200ResponseTeam.billingCurrency) &&
        Objects.equals(this.billingFrequency, getMe200ResponseTeam.billingFrequency) &&
        Objects.equals(this.creationDate, getMe200ResponseTeam.creationDate) &&
        Objects.equals(this.timeZone, getMe200ResponseTeam.timeZone) &&
        Objects.equals(this.stripeCustomerId, getMe200ResponseTeam.stripeCustomerId) &&
        Objects.equals(this.campaign, getMe200ResponseTeam.campaign) &&
        Objects.equals(this.isReferred, getMe200ResponseTeam.isReferred) &&
        Objects.equals(this.creditUsage, getMe200ResponseTeam.creditUsage) &&
        Objects.equals(this.creditQuota, getMe200ResponseTeam.creditQuota) &&
        Objects.equals(this.creditPackage, getMe200ResponseTeam.creditPackage) &&
        Objects.equals(this.emailTrackingSubdomain, getMe200ResponseTeam.emailTrackingSubdomain) &&
        Objects.equals(this.emailTrackingDomain, getMe200ResponseTeam.emailTrackingDomain) &&
        Objects.equals(this.automatedTagging, getMe200ResponseTeam.automatedTagging) &&
        Objects.equals(this.domain, getMe200ResponseTeam.domain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, trackingToken, daysUntilAccountInactive, totalUserCount, enabledUserCount, paidUserCount, freeUsers, subscribed, paymentType, discountCode, discountType, promoDescription, promoRedeemBy, promoCode, plan, currency, billingCurrency, billingFrequency, creationDate, timeZone, stripeCustomerId, campaign, isReferred, creditUsage, creditQuota, creditPackage, emailTrackingSubdomain, emailTrackingDomain, automatedTagging, domain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMe200ResponseTeam {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    trackingToken: ").append(toIndentedString(trackingToken)).append("\n");
    sb.append("    daysUntilAccountInactive: ").append(toIndentedString(daysUntilAccountInactive)).append("\n");
    sb.append("    totalUserCount: ").append(toIndentedString(totalUserCount)).append("\n");
    sb.append("    enabledUserCount: ").append(toIndentedString(enabledUserCount)).append("\n");
    sb.append("    paidUserCount: ").append(toIndentedString(paidUserCount)).append("\n");
    sb.append("    freeUsers: ").append(toIndentedString(freeUsers)).append("\n");
    sb.append("    subscribed: ").append(toIndentedString(subscribed)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    discountCode: ").append(toIndentedString(discountCode)).append("\n");
    sb.append("    discountType: ").append(toIndentedString(discountType)).append("\n");
    sb.append("    promoDescription: ").append(toIndentedString(promoDescription)).append("\n");
    sb.append("    promoRedeemBy: ").append(toIndentedString(promoRedeemBy)).append("\n");
    sb.append("    promoCode: ").append(toIndentedString(promoCode)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    billingCurrency: ").append(toIndentedString(billingCurrency)).append("\n");
    sb.append("    billingFrequency: ").append(toIndentedString(billingFrequency)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    stripeCustomerId: ").append(toIndentedString(stripeCustomerId)).append("\n");
    sb.append("    campaign: ").append(toIndentedString(campaign)).append("\n");
    sb.append("    isReferred: ").append(toIndentedString(isReferred)).append("\n");
    sb.append("    creditUsage: ").append(toIndentedString(creditUsage)).append("\n");
    sb.append("    creditQuota: ").append(toIndentedString(creditQuota)).append("\n");
    sb.append("    creditPackage: ").append(toIndentedString(creditPackage)).append("\n");
    sb.append("    emailTrackingSubdomain: ").append(toIndentedString(emailTrackingSubdomain)).append("\n");
    sb.append("    emailTrackingDomain: ").append(toIndentedString(emailTrackingDomain)).append("\n");
    sb.append("    automatedTagging: ").append(toIndentedString(automatedTagging)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("tracking_token");
    openapiFields.add("days_until_account_inactive");
    openapiFields.add("total_user_count");
    openapiFields.add("enabled_user_count");
    openapiFields.add("paid_user_count");
    openapiFields.add("free_users");
    openapiFields.add("subscribed");
    openapiFields.add("payment_type");
    openapiFields.add("discount_code");
    openapiFields.add("discount_type");
    openapiFields.add("promo_description");
    openapiFields.add("promo_redeem_by");
    openapiFields.add("promo_code");
    openapiFields.add("plan");
    openapiFields.add("currency");
    openapiFields.add("billing_currency");
    openapiFields.add("billing_frequency");
    openapiFields.add("creation_date");
    openapiFields.add("time_zone");
    openapiFields.add("stripe_customer_id");
    openapiFields.add("campaign");
    openapiFields.add("is_referred");
    openapiFields.add("credit_usage");
    openapiFields.add("credit_quota");
    openapiFields.add("credit_package");
    openapiFields.add("email_tracking_subdomain");
    openapiFields.add("email_tracking_domain");
    openapiFields.add("automated_tagging");
    openapiFields.add("domain");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetMe200ResponseTeam
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMe200ResponseTeam.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMe200ResponseTeam is not found in the empty JSON string", GetMe200ResponseTeam.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMe200ResponseTeam.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMe200ResponseTeam` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("tracking_token") != null && !jsonObj.get("tracking_token").isJsonNull()) && !jsonObj.get("tracking_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_token").toString()));
      }
      if ((jsonObj.get("payment_type") != null && !jsonObj.get("payment_type").isJsonNull()) && !jsonObj.get("payment_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_type").toString()));
      }
      // validate the optional field `payment_type`
      if (jsonObj.get("payment_type") != null && !jsonObj.get("payment_type").isJsonNull()) {
        PaymentTypeEnum.validateJsonElement(jsonObj.get("payment_type"));
      }
      if ((jsonObj.get("discount_code") != null && !jsonObj.get("discount_code").isJsonNull()) && !jsonObj.get("discount_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discount_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discount_code").toString()));
      }
      if ((jsonObj.get("discount_type") != null && !jsonObj.get("discount_type").isJsonNull()) && !jsonObj.get("discount_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discount_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discount_type").toString()));
      }
      if ((jsonObj.get("promo_description") != null && !jsonObj.get("promo_description").isJsonNull()) && !jsonObj.get("promo_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promo_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promo_description").toString()));
      }
      if ((jsonObj.get("promo_code") != null && !jsonObj.get("promo_code").isJsonNull()) && !jsonObj.get("promo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promo_code").toString()));
      }
      // validate the optional field `currency`
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) {
        GetMe200ResponseTeamCurrency.validateJsonElement(jsonObj.get("currency"));
      }
      // validate the optional field `billing_currency`
      if (jsonObj.get("billing_currency") != null && !jsonObj.get("billing_currency").isJsonNull()) {
        GetMe200ResponseTeamCurrency.validateJsonElement(jsonObj.get("billing_currency"));
      }
      if ((jsonObj.get("billing_frequency") != null && !jsonObj.get("billing_frequency").isJsonNull()) && !jsonObj.get("billing_frequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_frequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_frequency").toString()));
      }
      // validate the optional field `billing_frequency`
      if (jsonObj.get("billing_frequency") != null && !jsonObj.get("billing_frequency").isJsonNull()) {
        BillingFrequencyEnum.validateJsonElement(jsonObj.get("billing_frequency"));
      }
      if ((jsonObj.get("time_zone") != null && !jsonObj.get("time_zone").isJsonNull()) && !jsonObj.get("time_zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_zone").toString()));
      }
      if ((jsonObj.get("stripe_customer_id") != null && !jsonObj.get("stripe_customer_id").isJsonNull()) && !jsonObj.get("stripe_customer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stripe_customer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stripe_customer_id").toString()));
      }
      if ((jsonObj.get("campaign") != null && !jsonObj.get("campaign").isJsonNull()) && !jsonObj.get("campaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaign").toString()));
      }
      if ((jsonObj.get("credit_package") != null && !jsonObj.get("credit_package").isJsonNull()) && !jsonObj.get("credit_package").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credit_package` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credit_package").toString()));
      }
      // validate the optional field `credit_package`
      if (jsonObj.get("credit_package") != null && !jsonObj.get("credit_package").isJsonNull()) {
        CreditPackageEnum.validateJsonElement(jsonObj.get("credit_package"));
      }
      if ((jsonObj.get("email_tracking_subdomain") != null && !jsonObj.get("email_tracking_subdomain").isJsonNull()) && !jsonObj.get("email_tracking_subdomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_tracking_subdomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_tracking_subdomain").toString()));
      }
      // validate the optional field `email_tracking_domain`
      if (jsonObj.get("email_tracking_domain") != null && !jsonObj.get("email_tracking_domain").isJsonNull()) {
        GetMe200ResponseTeamEmailTrackingDomain.validateJsonElement(jsonObj.get("email_tracking_domain"));
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMe200ResponseTeam.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMe200ResponseTeam' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMe200ResponseTeam> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMe200ResponseTeam.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMe200ResponseTeam>() {
           @Override
           public void write(JsonWriter out, GetMe200ResponseTeam value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMe200ResponseTeam read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetMe200ResponseTeam given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetMe200ResponseTeam
  * @throws IOException if the JSON string is invalid with respect to GetMe200ResponseTeam
  */
  public static GetMe200ResponseTeam fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMe200ResponseTeam.class);
  }

 /**
  * Convert an instance of GetMe200ResponseTeam to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

