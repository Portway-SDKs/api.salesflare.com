/*
 * Salesflare API
 * # Introduction  ## Getting Started  The Salesflare API allows you to access and build your own applications or integrations that interact with Salesflare.  The Salesflare API provides a RESTful interface with JSON-formatted responses to access most Salesflare resources.  ## Authentication  The Salesflare API uses bearer token based authentication, which means you need to use the key-value pair \"Authorization : Bearer APIKEY\" in the header to authenticate.  You can make an API key in [\"Settings\" > \"API keys\"](https://app.salesflare.com/#/settings/apikeys).  Click on the large orange \"+\" button on the bottom right of the screen to create an API key.  ![Screenshot API Key Settings](https://lib.salesflare.com/api_docs/screenshot_settings_apikeys.png)  ## Requests  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure your developer tools support this version of TLS as older versions or SSL are not supported for security reasons.  For PUT or POST requests (e.g. create, update), the payload must be provided as JSON in the request body.  ## Responses  Responses use HTTP status codes, with the most typical ones being:  | Code                   | Meaning               | |------------------------|-----------------------| | Successful Responses                           | | 200                    | OK                    | | Error Responses                                | | 400                    | Bad Request           | | 401                    | Unauthorized          | | 404                    | Not Found             | | 429                    | Too Many Requests     | | 500                    | Internal Server Error |  ## Testing  We recommend testing our API with Postman.  ### Download specification  Our API is documented following the OpenAPI specification. You can download it [here](https://api.salesflare.com/openapi.json)  ### Import in Postman  To import the collection, open Postman and click Import, then select \"Import From Link\"  Copy & Paste the following link and press the \"Import\" button:  > https://api.salesflare.com/openapi.json  ![Screenshot Postman Import](https://lib.salesflare.com/api_docs/screenshot_postman_import.png)  ## Support  For API questions and support, please email support@salesflare.com or click the chat bubble below.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salesflare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PostContactsRequestInnerAddress;
import org.openapitools.client.model.PostContactsRequestInnerPhoneNumbersInner;
import org.openapitools.client.model.PostContactsRequestInnerPosition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PostContactsRequestInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-24T18:23:43.461571613Z[UTC]", comments = "Generator version: 7.6.0")
public class PostContactsRequestInner {
  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private BigDecimal owner;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_MIDDLE = "middle";
  @SerializedName(SERIALIZED_NAME_MIDDLE)
  private String middle;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PICTURE = "picture";
  @SerializedName(SERIALIZED_NAME_PICTURE)
  private String picture;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private BigDecimal account;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birth_date";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private OffsetDateTime birthDate;

  public static final String SERIALIZED_NAME_OPT_OUT = "opt-out";
  @SerializedName(SERIALIZED_NAME_OPT_OUT)
  private Boolean optOut;

  public static final String SERIALIZED_NAME_OPT_OUT_DATE = "opt-out_date";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_DATE)
  private OffsetDateTime optOutDate;

  public static final String SERIALIZED_NAME_OPT_OUT_CAMPAIGN = "opt-out_campaign";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_CAMPAIGN)
  private String optOutCampaign;

  public static final String SERIALIZED_NAME_BOUNCED = "bounced";
  @SerializedName(SERIALIZED_NAME_BOUNCED)
  private Boolean bounced;

  public static final String SERIALIZED_NAME_BOUNCED_DATE = "bounced_date";
  @SerializedName(SERIALIZED_NAME_BOUNCED_DATE)
  private OffsetDateTime bouncedDate;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<Object> files = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private PostContactsRequestInnerAddress address;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<PostContactsRequestInnerAddress> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_MOBILE_PHONE_NUMBER = "mobile_phone_number";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE_NUMBER)
  private String mobilePhoneNumber;

  public static final String SERIALIZED_NAME_HOME_PHONE_NUMBER = "home_phone_number";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_NUMBER)
  private String homePhoneNumber;

  public static final String SERIALIZED_NAME_FAX_NUMBER = "fax_number";
  @SerializedName(SERIALIZED_NAME_FAX_NUMBER)
  private String faxNumber;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phone_numbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<PostContactsRequestInnerPhoneNumbersInner> phoneNumbers = new ArrayList<>();

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private PostContactsRequestInnerPosition position;

  public static final String SERIALIZED_NAME_POSITIONS = "positions";
  @SerializedName(SERIALIZED_NAME_POSITIONS)
  private List<PostContactsRequestInnerPosition> positions = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOCIAL_PROFILES = "social_profiles";
  @SerializedName(SERIALIZED_NAME_SOCIAL_PROFILES)
  private List<String> socialProfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private Object custom;

  public PostContactsRequestInner() {
  }

  public PostContactsRequestInner owner(BigDecimal owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  public BigDecimal getOwner() {
    return owner;
  }

  public void setOwner(BigDecimal owner) {
    this.owner = owner;
  }


  public PostContactsRequestInner email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public PostContactsRequestInner prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public PostContactsRequestInner firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public PostContactsRequestInner middle(String middle) {
    this.middle = middle;
    return this;
  }

   /**
   * Get middle
   * @return middle
  **/
  @javax.annotation.Nullable
  public String getMiddle() {
    return middle;
  }

  public void setMiddle(String middle) {
    this.middle = middle;
  }


  public PostContactsRequestInner lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public PostContactsRequestInner suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

   /**
   * Get suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public PostContactsRequestInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PostContactsRequestInner picture(String picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Get picture
   * @return picture
  **/
  @javax.annotation.Nullable
  public String getPicture() {
    return picture;
  }

  public void setPicture(String picture) {
    this.picture = picture;
  }


  public PostContactsRequestInner account(BigDecimal account) {
    this.account = account;
    return this;
  }

   /**
   * Any existing account will be removed from the contact when specifically passing &#x60;null&#x60;!
   * @return account
  **/
  @javax.annotation.Nullable
  public BigDecimal getAccount() {
    return account;
  }

  public void setAccount(BigDecimal account) {
    this.account = account;
  }


  public PostContactsRequestInner birthDate(OffsetDateTime birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(OffsetDateTime birthDate) {
    this.birthDate = birthDate;
  }


  public PostContactsRequestInner optOut(Boolean optOut) {
    this.optOut = optOut;
    return this;
  }

   /**
   * Get optOut
   * @return optOut
  **/
  @javax.annotation.Nullable
  public Boolean getOptOut() {
    return optOut;
  }

  public void setOptOut(Boolean optOut) {
    this.optOut = optOut;
  }


  public PostContactsRequestInner optOutDate(OffsetDateTime optOutDate) {
    this.optOutDate = optOutDate;
    return this;
  }

   /**
   * Get optOutDate
   * @return optOutDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getOptOutDate() {
    return optOutDate;
  }

  public void setOptOutDate(OffsetDateTime optOutDate) {
    this.optOutDate = optOutDate;
  }


  public PostContactsRequestInner optOutCampaign(String optOutCampaign) {
    this.optOutCampaign = optOutCampaign;
    return this;
  }

   /**
   * Get optOutCampaign
   * @return optOutCampaign
  **/
  @javax.annotation.Nullable
  public String getOptOutCampaign() {
    return optOutCampaign;
  }

  public void setOptOutCampaign(String optOutCampaign) {
    this.optOutCampaign = optOutCampaign;
  }


  public PostContactsRequestInner bounced(Boolean bounced) {
    this.bounced = bounced;
    return this;
  }

   /**
   * Get bounced
   * @return bounced
  **/
  @javax.annotation.Nullable
  public Boolean getBounced() {
    return bounced;
  }

  public void setBounced(Boolean bounced) {
    this.bounced = bounced;
  }


  public PostContactsRequestInner bouncedDate(OffsetDateTime bouncedDate) {
    this.bouncedDate = bouncedDate;
    return this;
  }

   /**
   * Get bouncedDate
   * @return bouncedDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getBouncedDate() {
    return bouncedDate;
  }

  public void setBouncedDate(OffsetDateTime bouncedDate) {
    this.bouncedDate = bouncedDate;
  }


  public PostContactsRequestInner files(List<Object> files) {
    this.files = files;
    return this;
  }

  public PostContactsRequestInner addFilesItem(Object filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @javax.annotation.Nullable
  public List<Object> getFiles() {
    return files;
  }

  public void setFiles(List<Object> files) {
    this.files = files;
  }


  public PostContactsRequestInner tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public PostContactsRequestInner addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public PostContactsRequestInner address(PostContactsRequestInnerAddress address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  public PostContactsRequestInnerAddress getAddress() {
    return address;
  }

  public void setAddress(PostContactsRequestInnerAddress address) {
    this.address = address;
  }


  public PostContactsRequestInner addresses(List<PostContactsRequestInnerAddress> addresses) {
    this.addresses = addresses;
    return this;
  }

  public PostContactsRequestInner addAddressesItem(PostContactsRequestInnerAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @javax.annotation.Nullable
  public List<PostContactsRequestInnerAddress> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<PostContactsRequestInnerAddress> addresses) {
    this.addresses = addresses;
  }


  public PostContactsRequestInner phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public PostContactsRequestInner mobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
    return this;
  }

   /**
   * Get mobilePhoneNumber
   * @return mobilePhoneNumber
  **/
  @javax.annotation.Nullable
  public String getMobilePhoneNumber() {
    return mobilePhoneNumber;
  }

  public void setMobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
  }


  public PostContactsRequestInner homePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
    return this;
  }

   /**
   * Get homePhoneNumber
   * @return homePhoneNumber
  **/
  @javax.annotation.Nullable
  public String getHomePhoneNumber() {
    return homePhoneNumber;
  }

  public void setHomePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
  }


  public PostContactsRequestInner faxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
    return this;
  }

   /**
   * Get faxNumber
   * @return faxNumber
  **/
  @javax.annotation.Nullable
  public String getFaxNumber() {
    return faxNumber;
  }

  public void setFaxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
  }


  public PostContactsRequestInner phoneNumbers(List<PostContactsRequestInnerPhoneNumbersInner> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public PostContactsRequestInner addPhoneNumbersItem(PostContactsRequestInnerPhoneNumbersInner phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  public List<PostContactsRequestInnerPhoneNumbersInner> getPhoneNumbers() {
    return phoneNumbers;
  }

  public void setPhoneNumbers(List<PostContactsRequestInnerPhoneNumbersInner> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public PostContactsRequestInner position(PostContactsRequestInnerPosition position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  public PostContactsRequestInnerPosition getPosition() {
    return position;
  }

  public void setPosition(PostContactsRequestInnerPosition position) {
    this.position = position;
  }


  public PostContactsRequestInner positions(List<PostContactsRequestInnerPosition> positions) {
    this.positions = positions;
    return this;
  }

  public PostContactsRequestInner addPositionsItem(PostContactsRequestInnerPosition positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

   /**
   * Get positions
   * @return positions
  **/
  @javax.annotation.Nullable
  public List<PostContactsRequestInnerPosition> getPositions() {
    return positions;
  }

  public void setPositions(List<PostContactsRequestInnerPosition> positions) {
    this.positions = positions;
  }


  public PostContactsRequestInner socialProfiles(List<String> socialProfiles) {
    this.socialProfiles = socialProfiles;
    return this;
  }

  public PostContactsRequestInner addSocialProfilesItem(String socialProfilesItem) {
    if (this.socialProfiles == null) {
      this.socialProfiles = new ArrayList<>();
    }
    this.socialProfiles.add(socialProfilesItem);
    return this;
  }

   /**
   * Get socialProfiles
   * @return socialProfiles
  **/
  @javax.annotation.Nullable
  public List<String> getSocialProfiles() {
    return socialProfiles;
  }

  public void setSocialProfiles(List<String> socialProfiles) {
    this.socialProfiles = socialProfiles;
  }


  public PostContactsRequestInner custom(Object custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @javax.annotation.Nullable
  public Object getCustom() {
    return custom;
  }

  public void setCustom(Object custom) {
    this.custom = custom;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostContactsRequestInner postContactsRequestInner = (PostContactsRequestInner) o;
    return Objects.equals(this.owner, postContactsRequestInner.owner) &&
        Objects.equals(this.email, postContactsRequestInner.email) &&
        Objects.equals(this.prefix, postContactsRequestInner.prefix) &&
        Objects.equals(this.firstname, postContactsRequestInner.firstname) &&
        Objects.equals(this.middle, postContactsRequestInner.middle) &&
        Objects.equals(this.lastname, postContactsRequestInner.lastname) &&
        Objects.equals(this.suffix, postContactsRequestInner.suffix) &&
        Objects.equals(this.name, postContactsRequestInner.name) &&
        Objects.equals(this.picture, postContactsRequestInner.picture) &&
        Objects.equals(this.account, postContactsRequestInner.account) &&
        Objects.equals(this.birthDate, postContactsRequestInner.birthDate) &&
        Objects.equals(this.optOut, postContactsRequestInner.optOut) &&
        Objects.equals(this.optOutDate, postContactsRequestInner.optOutDate) &&
        Objects.equals(this.optOutCampaign, postContactsRequestInner.optOutCampaign) &&
        Objects.equals(this.bounced, postContactsRequestInner.bounced) &&
        Objects.equals(this.bouncedDate, postContactsRequestInner.bouncedDate) &&
        Objects.equals(this.files, postContactsRequestInner.files) &&
        Objects.equals(this.tags, postContactsRequestInner.tags) &&
        Objects.equals(this.address, postContactsRequestInner.address) &&
        Objects.equals(this.addresses, postContactsRequestInner.addresses) &&
        Objects.equals(this.phoneNumber, postContactsRequestInner.phoneNumber) &&
        Objects.equals(this.mobilePhoneNumber, postContactsRequestInner.mobilePhoneNumber) &&
        Objects.equals(this.homePhoneNumber, postContactsRequestInner.homePhoneNumber) &&
        Objects.equals(this.faxNumber, postContactsRequestInner.faxNumber) &&
        Objects.equals(this.phoneNumbers, postContactsRequestInner.phoneNumbers) &&
        Objects.equals(this.position, postContactsRequestInner.position) &&
        Objects.equals(this.positions, postContactsRequestInner.positions) &&
        Objects.equals(this.socialProfiles, postContactsRequestInner.socialProfiles) &&
        Objects.equals(this.custom, postContactsRequestInner.custom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(owner, email, prefix, firstname, middle, lastname, suffix, name, picture, account, birthDate, optOut, optOutDate, optOutCampaign, bounced, bouncedDate, files, tags, address, addresses, phoneNumber, mobilePhoneNumber, homePhoneNumber, faxNumber, phoneNumbers, position, positions, socialProfiles, custom);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostContactsRequestInner {\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    middle: ").append(toIndentedString(middle)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    optOut: ").append(toIndentedString(optOut)).append("\n");
    sb.append("    optOutDate: ").append(toIndentedString(optOutDate)).append("\n");
    sb.append("    optOutCampaign: ").append(toIndentedString(optOutCampaign)).append("\n");
    sb.append("    bounced: ").append(toIndentedString(bounced)).append("\n");
    sb.append("    bouncedDate: ").append(toIndentedString(bouncedDate)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    mobilePhoneNumber: ").append(toIndentedString(mobilePhoneNumber)).append("\n");
    sb.append("    homePhoneNumber: ").append(toIndentedString(homePhoneNumber)).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    socialProfiles: ").append(toIndentedString(socialProfiles)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("owner");
    openapiFields.add("email");
    openapiFields.add("prefix");
    openapiFields.add("firstname");
    openapiFields.add("middle");
    openapiFields.add("lastname");
    openapiFields.add("suffix");
    openapiFields.add("name");
    openapiFields.add("picture");
    openapiFields.add("account");
    openapiFields.add("birth_date");
    openapiFields.add("opt-out");
    openapiFields.add("opt-out_date");
    openapiFields.add("opt-out_campaign");
    openapiFields.add("bounced");
    openapiFields.add("bounced_date");
    openapiFields.add("files");
    openapiFields.add("tags");
    openapiFields.add("address");
    openapiFields.add("addresses");
    openapiFields.add("phone_number");
    openapiFields.add("mobile_phone_number");
    openapiFields.add("home_phone_number");
    openapiFields.add("fax_number");
    openapiFields.add("phone_numbers");
    openapiFields.add("position");
    openapiFields.add("positions");
    openapiFields.add("social_profiles");
    openapiFields.add("custom");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PostContactsRequestInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostContactsRequestInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostContactsRequestInner is not found in the empty JSON string", PostContactsRequestInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostContactsRequestInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostContactsRequestInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("middle") != null && !jsonObj.get("middle").isJsonNull()) && !jsonObj.get("middle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middle").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("picture") != null && !jsonObj.get("picture").isJsonNull()) && !jsonObj.get("picture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picture").toString()));
      }
      if ((jsonObj.get("opt-out_campaign") != null && !jsonObj.get("opt-out_campaign").isJsonNull()) && !jsonObj.get("opt-out_campaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt-out_campaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opt-out_campaign").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("files") != null && !jsonObj.get("files").isJsonNull() && !jsonObj.get("files").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `files` to be an array in the JSON string but got `%s`", jsonObj.get("files").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        PostContactsRequestInnerAddress.validateJsonElement(jsonObj.get("address"));
      }
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            PostContactsRequestInnerAddress.validateJsonElement(jsonArrayaddresses.get(i));
          };
        }
      }
      if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
      }
      if ((jsonObj.get("mobile_phone_number") != null && !jsonObj.get("mobile_phone_number").isJsonNull()) && !jsonObj.get("mobile_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile_phone_number").toString()));
      }
      if ((jsonObj.get("home_phone_number") != null && !jsonObj.get("home_phone_number").isJsonNull()) && !jsonObj.get("home_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `home_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("home_phone_number").toString()));
      }
      if ((jsonObj.get("fax_number") != null && !jsonObj.get("fax_number").isJsonNull()) && !jsonObj.get("fax_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax_number").toString()));
      }
      if (jsonObj.get("phone_numbers") != null && !jsonObj.get("phone_numbers").isJsonNull()) {
        JsonArray jsonArrayphoneNumbers = jsonObj.getAsJsonArray("phone_numbers");
        if (jsonArrayphoneNumbers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phone_numbers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phone_numbers` to be an array in the JSON string but got `%s`", jsonObj.get("phone_numbers").toString()));
          }

          // validate the optional field `phone_numbers` (array)
          for (int i = 0; i < jsonArrayphoneNumbers.size(); i++) {
            PostContactsRequestInnerPhoneNumbersInner.validateJsonElement(jsonArrayphoneNumbers.get(i));
          };
        }
      }
      // validate the optional field `position`
      if (jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) {
        PostContactsRequestInnerPosition.validateJsonElement(jsonObj.get("position"));
      }
      if (jsonObj.get("positions") != null && !jsonObj.get("positions").isJsonNull()) {
        JsonArray jsonArraypositions = jsonObj.getAsJsonArray("positions");
        if (jsonArraypositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("positions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `positions` to be an array in the JSON string but got `%s`", jsonObj.get("positions").toString()));
          }

          // validate the optional field `positions` (array)
          for (int i = 0; i < jsonArraypositions.size(); i++) {
            PostContactsRequestInnerPosition.validateJsonElement(jsonArraypositions.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("social_profiles") != null && !jsonObj.get("social_profiles").isJsonNull() && !jsonObj.get("social_profiles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `social_profiles` to be an array in the JSON string but got `%s`", jsonObj.get("social_profiles").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostContactsRequestInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostContactsRequestInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostContactsRequestInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostContactsRequestInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PostContactsRequestInner>() {
           @Override
           public void write(JsonWriter out, PostContactsRequestInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostContactsRequestInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PostContactsRequestInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PostContactsRequestInner
  * @throws IOException if the JSON string is invalid with respect to PostContactsRequestInner
  */
  public static PostContactsRequestInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostContactsRequestInner.class);
  }

 /**
  * Convert an instance of PostContactsRequestInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

